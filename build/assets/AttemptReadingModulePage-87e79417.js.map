{"version":3,"file":"AttemptReadingModulePage-87e79417.js","sources":["../../src/components/ieltstest/reading/ReadingFooter.jsx","../../src/pages/ieltstest/reading/AttemptReadingModulePage.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  Stack,\n  Container,\n  Card,\n} from \"react-bootstrap\";\nimport {\n  FiArrowUp,\n  FiArrowDown,\n  FiChevronLeft,\n  FiChevronRight,\n  FiCheckCircle,\n  FiClock,\n} from \"react-icons/fi\";\nimport CountdownTimer from \"../../elements/CountdownTimer\";\nimport QuestionPallete from \"../QuestionPallete\";\n\nconst ReadingFooter = ({\n  isExpanded,\n  toggleExpanded,\n  deviceType,\n  module,\n  questionData,\n  setShowReviewModal,\n  userAllAnswer,\n  setShowSubmitModal,\n  handleConfirmEndTest,\n}) => {\n  return (\n    <div\n      className=\"fixed-footer border-top\"\n      style={{\n        height: isExpanded ? \"50vh\" : \"50px\", // adjust as needed\n        width: \"100vw\",\n        position: \"fixed\",\n        bottom: 0,\n        backgroundColor: \"white\",\n        transition: \"height 0.3s\",\n        zIndex: \"999\",\n      }}\n    >\n      <Container>\n        <Row className=\"mt-1 pb-1 border-bottom text-black\">\n          <Col className=\"col-4 mt-1\">\n            <div>\n              <span style={{ fontSize: \"20px\" }}>\n                <FiCheckCircle className=\"\" style={{ marginRight: \"5px\" }} />\n                {questionData.completed_questions}/{module.total_questions}\n              </span>\n            </div>\n          </Col>\n          <Col className=\"col-4 text-center mt-1\">\n            <CountdownTimer\n              initialMinutes={40}\n              initialSeconds={0}\n              handleTimesUp={handleConfirmEndTest}\n            />\n          </Col>\n          <Col className=\"col-4\" style={{ textAlign: \"right\" }}>\n            {deviceType !== \"mobile\" && (\n              <>\n                <Button\n                  variant=\"outline-primary\"\n                  className=\"mx-1\"\n                  onClick={() => {\n                    setShowReviewModal(true);\n                  }}\n                >\n                  Review\n                </Button>\n                <Button\n                  variant=\"outline-primary\"\n                  className=\"mx-1\"\n                  onClick={setShowSubmitModal}\n                >\n                  Submit Test\n                </Button>\n              </>\n            )}\n            <Button\n              className=\"mx-1\"\n              onClick={() => toggleExpanded(!isExpanded)}\n            >\n              {isExpanded ? <FiArrowDown size={20} /> : <FiArrowUp size={20} />}\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"my-3\" style={{ overflow: \"auto\", maxHeight: \"38vh\" }}>\n          <Col lg={\"8\"} className=\"my-2\">\n            <p className=\" fw-bold text-black mb-1 mx-1\">Question Pallete</p>\n            <QuestionPallete module={module} currentFormData={userAllAnswer} />\n          </Col>\n          <Col lg={\"4\"}>\n            {deviceType === \"mobile\" && (\n              <>\n                <Button\n                  variant=\"outline-primary\"\n                  className=\"mx-1\"\n                  onClick={() => {\n                    setShowReviewModal(true);\n                  }}\n                >\n                  Review\n                </Button>\n                <Button\n                  variant=\"outline-primary\"\n                  className=\"mx-1\"\n                  onClick={setShowSubmitModal}\n                >\n                  Submit Test\n                </Button>\n              </>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default ReadingFooter;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Stack,\n  Navbar,\n  Card,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Accordion,\n  Table,\n  Badge,\n  Button,\n} from \"react-bootstrap\";\nimport \"./ReactSplitPane.css\";\nimport { MiniNavBar } from \"../../../components/ieltstest/MiniNavBar\";\nimport ReadingFooter from \"../../../components/ieltstest/reading/ReadingFooter\";\nimport useAxios from \"../../../utils/useAxios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { API_URLS } from \"../../../utils/config\";\nimport ReadingSection from \"../../../components/ieltstest/reading/ReadingSection\";\nimport ReadingPassage from \"../../../components/ieltstest/reading/ReadingPassage\";\nimport { getFormData } from \"../../../utils/moduleUtils\";\nimport { FiArrowLeft, FiArrowRight, FiCheckCircle } from \"react-icons/fi\";\nimport BookInfo from \"../../../components/ieltstest/listening/BookInfo\";\nimport CustomSplitPane from \"../../../components/layout/CustomSplitPane\";\n\nconst AttemptReadingModulePage = () => {\n  const [deviceType, setDeviceType] = useState(\"desktop\");\n  const [isFooterExpanded, setFooterExpanded] = useState(false);\n  const { module_slug, attempt_slug } = useParams();\n  const [module, setModule] = useState(null);\n  const [currentSection, setCurrentSection] = useState(null);\n  const [currentFormData, setCurrentFormData] = useState({});\n  const [userAnswerBySection, setUserAnswerBySection] = useState({});\n  const [currentUserAnswerBySection, setCurrentUserAnswerBySection] =\n    useState(null);\n  const [allAnswers, setAllAnswers] = useState({});\n  const [questionData, setQuestionData] = useState({\n    completed_questions: 0,\n  });\n  const [showReviewModal, setShowReviewModal] = useState(false);\n  const handleCloseReviewModal = () => setShowReviewModal(false);\n\n  const [showTestInfoModal, setShowTestInfoModal] = useState(false);\n  const handleCloseTestInfoModal = () => setShowTestInfoModal(false);\n\n  const formRef = useRef(null);\n  const api = useAxios();\n  const [showSubmitModal, setShowSubmitModal] = useState(false);\n  const handleShowSubmitModal = () => setShowSubmitModal(true);\n  const handleClosSubmiteModal = () => setShowSubmitModal(false);\n  const navigate = useNavigate();\n  const passageSection = useRef(null);\n  const questionSection = useRef(null);\n  const isFirstSection = currentSection\n    ? currentSection.id === module.sections[0].id\n    : false;\n  const isLastSection = currentSection\n    ? currentSection.id === module.sections[module.sections.length - 1].id\n    : false;\n\n  // Effects:\n\n  useEffect(() => {\n    getModule();\n  }, []);\n\n  useEffect(() => {\n    if (currentSection) {\n      const answers = userAnswerBySection[currentSection.id];\n      setCurrentUserAnswerBySection(answers);\n      window.scrollTo(0, 0);\n    }\n  }, [currentSection]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setDeviceType(\"mobile\");\n      } else {\n        setDeviceType(\"desktop\");\n      }\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    getFormDataLocal();\n    initializeAllAnswer();\n  }, [module]);\n\n  useEffect(() => {\n    if (userAnswerBySection) {\n      // Make sure this is the correct variable name\n      let completed_questions = 0;\n      Object.keys(userAnswerBySection).map((section) =>\n        Object.keys(userAnswerBySection[section]).map(\n          (item) =>\n            // You can access the value with userAnswersBySection[section][item]\n            userAnswerBySection[section][item] !== undefined &&\n            userAnswerBySection[section][item] !== \"\" &&\n            completed_questions++\n        )\n      );\n      setQuestionData({\n        completed_questions: completed_questions,\n      });\n    }\n  }, [userAnswerBySection]); // Make sure this is the correct variable name\n\n  // Functions\n\n  function getFormDataLocal() {\n    if (currentSection != null) {\n      const data = getFormData(formRef, module, setCurrentFormData);\n      setUserAnswerBySection({\n        ...userAnswerBySection,\n        [currentSection.id]: data,\n      });\n      setAllAnswers({\n        ...allAnswers,\n        ...data, // Correctly merging the data object with the existing allAnswers object\n      });\n\n      return data;\n    } else {\n      return null;\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    endTest();\n  };\n\n  const handleChange = (event) => {\n    const formData = getFormDataLocal();\n  };\n\n  function handlePreviousSectionButton() {\n    let current_section_id = currentSection.id;\n    let new_section_id = current_section_id - 1;\n    const newSection = module.sections.find(\n      (section) => section.id === new_section_id\n    );\n    if (newSection) {\n      setCurrentSection(newSection);\n    } else {\n      const lastElement = module.sections[module.sections.length - 1];\n      setCurrentSection(lastElement);\n    }\n  }\n\n  function handleNextSectionButton() {\n    let current_section_id = currentSection.id;\n    let new_section_id = current_section_id + 1;\n    const newSection = module.sections.find(\n      (section) => section.id === new_section_id\n    );\n    if (newSection) {\n      setCurrentSection(newSection);\n    } else {\n      const lastElement = module.sections[0];\n      setCurrentSection(lastElement);\n    }\n  }\n\n  async function getModule() {\n    const response = await api.post(\n      API_URLS.getReadingModule + module_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setModule(response.data);\n      setCurrentSection(response.data.sections[0]);\n    }\n  }\n\n  function updateCurrentSection(id) {\n    const newSection = module.sections.find((section) => section.id === id);\n    setCurrentSection(newSection);\n  }\n\n  function initializeAllAnswer() {\n    if (module) {\n      const n = module.total_questions;\n      let answers = {};\n      Array.from({ length: n }, (_, index) => index + 1).map(\n        (number) => (answers[\"que-\" + number] = \"\")\n      );\n      setAllAnswers(answers);\n    }\n  }\n\n  function sendAttemptUpdate(attempt_type = \"In Progress\") {\n    const data = {\n      answers: allAnswers,\n      attempt_type: attempt_type,\n    };\n\n    return api.post(\n      \"/ieltstest/update_attempt/reading/\" + attempt_slug + \"/\",\n      data\n    );\n  }\n\n  function endTest() {\n    handleShowModal();\n  }\n  \n  function handleConfirmEndTest() {\n    getFormDataLocal();\n    sendAttemptUpdate(\"Completed\")\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Attempt Updated\");\n          navigate(\n            `/ieltstest/attempt/reading/${module_slug}/${attempt_slug}/get_result`\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error updating attempt: \", error);\n      });\n    handleClosSubmiteModal();\n  }\n\n  useEffect(() => {\n    document.title = \"Reading Test | KeenIELTS\";\n  }, []);\n\n  if (!module) {\n    return null;\n  }\n\n  return (\n    <>\n      <MiniNavBar\n        module={module}\n        currentSection={currentSection}\n        updateCurrentSection={updateCurrentSection}\n        setShowTestInfoModal={setShowTestInfoModal}\n      />\n      <CustomSplitPane\n        deviceType={deviceType}\n        currentSection={currentSection}\n        left={\n          <>\n            <ReadingPassage section={currentSection} />\n          </>\n        }\n        right={\n          <>\n            <ReadingSection\n              section={currentSection}\n              handleChange={handleChange}\n              handleSubmit={handleSubmit}\n              formRef={formRef}\n              key={currentSection.id}\n              section_form_values={currentUserAnswerBySection}\n            />\n            <Stack direction=\"horizontal\" className=\"border-top pt-3\">\n              <div className=\"m-0\">\n                <Button\n                  variant=\"dark\"\n                  className=\"btn-sm\"\n                  onClick={handlePreviousSectionButton}\n                  disabled={isFirstSection} // Disable if on the first section\n                >\n                  <FiArrowLeft size={20} /> Previous Section\n                </Button>\n              </div>\n              <div className=\"m-0 ms-auto\">\n                {isLastSection ? (\n                  <Button\n                    variant=\"primary\"\n                    className=\"btn-sm\"\n                    onClick={() => {\n                      setShowSubmitModal(true);\n                    }}\n                  >\n                    Submit Test <FiCheckCircle size={20} />\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"dark\"\n                    className=\"btn-sm\"\n                    onClick={handleNextSectionButton}\n                  >\n                    Next Section <FiArrowRight size={20} />\n                  </Button>\n                )}\n              </div>\n            </Stack>\n          </>\n        }\n      />\n      <ReadingFooter\n        isExpanded={isFooterExpanded}\n        toggleExpanded={setFooterExpanded}\n        deviceType={deviceType}\n        module={module}\n        updateCurrentSection={updateCurrentSection}\n        questionData={questionData}\n        setShowReviewModal={setShowReviewModal}\n        userAllAnswer={allAnswers}\n        setShowSubmitModal={setShowSubmitModal}\n        handleConfirmEndTest={handleConfirmEndTest}\n      />\n\n      <Modal show={showSubmitModal} onHide={handleClosSubmiteModal} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>End Test</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to end the test?</Modal.Body>\n        <Modal.Footer className=\"p-2\">\n          <Button variant=\"outline-primary\" onClick={handleClosSubmiteModal}>\n            No\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirmEndTest}>\n            Yes, end test\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        show={showReviewModal}\n        onHide={handleCloseReviewModal}\n        centered\n        className=\"p-0\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Review Answers</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table striped bordered size=\"sm\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Your Answer</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(allAnswers).map((item) => (\n                <tr key={item}>\n                  <td>{item.split(\"-\")[1]}</td>\n                  <td className=\"fw-bold text-black\">{allAnswers[item]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Modal.Body>\n        <div class=\"modal-footer py-2\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary\"\n            onClick={handleCloseReviewModal}\n          >\n            Close\n          </button>\n        </div>\n      </Modal>\n\n      <Modal\n        show={showTestInfoModal}\n        onHide={handleCloseTestInfoModal}\n        centered\n        className=\"p-0\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Test Info</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"p-0\">\n          <BookInfo module={module} attempt_slug={attempt_slug} />\n        </Modal.Body>\n        <div className=\"modal-footer py-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={handleCloseTestInfoModal}\n          >\n            Close\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default AttemptReadingModulePage;\n"],"names":["ReadingFooter","isExpanded","toggleExpanded","deviceType","module","questionData","setShowReviewModal","userAllAnswer","setShowSubmitModal","handleConfirmEndTest","jsx","Container","jsxs","Row","Col","FiCheckCircle","CountdownTimer","Fragment","Button","FiArrowDown","FiArrowUp","QuestionPallete","AttemptReadingModulePage","setDeviceType","useState","isFooterExpanded","setFooterExpanded","module_slug","attempt_slug","useParams","setModule","currentSection","setCurrentSection","currentFormData","setCurrentFormData","userAnswerBySection","setUserAnswerBySection","currentUserAnswerBySection","setCurrentUserAnswerBySection","allAnswers","setAllAnswers","setQuestionData","showReviewModal","handleCloseReviewModal","showTestInfoModal","setShowTestInfoModal","handleCloseTestInfoModal","formRef","useRef","api","useAxios","showSubmitModal","handleClosSubmiteModal","navigate","useNavigate","isFirstSection","isLastSection","useEffect","getModule","answers","handleResize","getFormDataLocal","initializeAllAnswer","completed_questions","section","item","data","getFormData","handleSubmit","event","endTest","handleChange","handlePreviousSectionButton","new_section_id","newSection","lastElement","handleNextSectionButton","response","API_URLS","updateCurrentSection","id","n","_","index","number","sendAttemptUpdate","attempt_type","error","MiniNavBar","CustomSplitPane","ReadingPassage","ReadingSection","Stack","FiArrowLeft","FiArrowRight","Modal","Table","BookInfo"],"mappings":"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"}