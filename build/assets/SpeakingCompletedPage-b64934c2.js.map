{"version":3,"file":"SpeakingCompletedPage-b64934c2.js","sources":["../../src/pages/ieltstest/speaking/SpeakingCompletedPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxios from \"../../../utils/useAxios\";\nimport { API_URLS } from \"../../../utils/config\";\nimport PageHeadingBriefinfo from \"../../../components/layout/PageHeadingBriefInfo\";\nimport SpeakingLoader from \"../../../components/ieltstest/speaking/SpeakingLoader\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Accordion,\n  Table,\n  Badge,\n  Stack,\n} from \"react-bootstrap\";\nimport CustomAudioPlayer from \"../../../components/elements/audioplayer/CustomAudioPlayer\";\nimport { FiCheck, FiCheckCircle, FiPlayCircle } from \"react-icons/fi\";\nimport WhatsNextCard from \"../../../components/ieltstest/WhatsNextCard\";\nimport StartPracticeTestCard from \"../../../components/ieltstest/StartPracticeTestCard\";\nimport CommentsCard from \"../../../components/CommentsCard\";\nimport { CheckCircleFill } from \"react-bootstrap-icons\";\nimport SpeakingResponsesCard from \"../../../components/ieltstest/speaking/SpeakingResponsesCard\";\n\nconst SpeakingCompletedPage = () => {\n  const { module_slug, attempt_slug } = useParams();\n  const [attempt, setAttempt] = useState(null);\n  const [module, setModule] = useState(null);\n\n  const api = useAxios();\n\n  async function getAttempt() {\n    const response = await api.post(\n      API_URLS.getSpeakingAttempt + attempt_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setAttempt(response.data);\n    } else {\n      console.error(\"Unable to fetch attempt at ListeningResult.jsx\");\n    }\n  }\n\n  async function getModule() {\n    const response = await api.post(\n      API_URLS.getSpeakingModule + module_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setModule(response.data);\n    }\n  }\n\n  useEffect(() => {\n    getAttempt();\n    getModule();\n  }, []);\n\n  if (!module || !attempt) {\n    return <SpeakingLoader />; // Replace with your preferred loading component\n  }\n\n  return (\n    <>\n      <PageHeadingBriefinfo\n        pagetitle={attempt.book.name}\n        briefinfo={\"Speaking Test Completed\"}\n        color=\"bg-speaking\"\n      />\n\n      <Container className=\"mb-3\">\n        <Row className=\"justify-content-center\">\n          <Col xl={8} lg={10} md={12} className=\"mt-3\">\n            <Card>\n              <Card.Header>\n                <Stack direction=\"horizontal\" gap={3}>\n                  <div>\n                    <h3 className=\"mt-2 fw-bold\">\n                      You've completed your speaking test.{\" \"}\n                    </h3>\n                  </div>\n                  <div className=\"ms-auto\">\n                    <CheckCircleFill size={30} className=\"text-success\" />\n                  </div>\n                </Stack>\n              </Card.Header>\n              <Card.Body className=\"\">\n                <p style={{ fontSize: \"1.1rem\" }} className=\"\">\n                  We have received your test responses. We will evaluate your\n                  test and send you the result within 24 hours. You will receive\n                  notification on your Dashboard page once the result is ready.\n                </p>\n                <p style={{ fontSize: \"1.1rem\" }}>\n                  Meanwhile, you can check your test responses below.\n                </p>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col xl={8} lg={10} md={12} className=\"mt-3\">\n            <SpeakingResponsesCard attempt={attempt} module={module} />\n          </Col>\n\n          {attempt.full_test_next_attempt && (\n            <Col xl={8} lg={10} md={12} className=\"my-3\">\n              <FullTestNextModule attempt={attempt} />\n            </Col>\n          )}\n\n          <Col xl={8} lg={10} md={12} className=\"my-3\">\n            <WhatsNextCard />\n          </Col>\n\n          <Col xl={8} lg={10} md={12} className=\"mb-3\">\n            <StartPracticeTestCard />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SpeakingCompletedPage;\n"],"names":["SpeakingCompletedPage","module_slug","attempt_slug","useParams","attempt","setAttempt","useState","module","setModule","api","useAxios","getAttempt","response","API_URLS","getModule","useEffect","SpeakingLoader","jsxs","Fragment","jsx","PageHeadingBriefinfo","Container","Row","Col","Card","Stack","CheckCircleFill","SpeakingResponsesCard","WhatsNextCard","StartPracticeTestCard"],"mappings":"ohBAwBA,MAAMA,EAAwB,IAAM,CAClC,KAAM,CAAE,YAAAC,EAAa,aAAAC,CAAa,EAAIC,EAAU,EAC1C,CAACC,EAASC,CAAU,EAAIC,WAAS,IAAI,EACrC,CAACC,EAAQC,CAAS,EAAIF,WAAS,IAAI,EAEnCG,EAAMC,IAEZ,eAAeC,GAAa,CACpB,MAAAC,EAAW,MAAMH,EAAI,KACzBI,EAAS,mBAAqBX,EAAe,GAAA,EAE3CU,EAAS,SAAW,IACtBP,EAAWO,EAAS,IAAI,EAExB,QAAQ,MAAM,gDAAgD,CAElE,CAEA,eAAeE,GAAY,CACnB,MAAAF,EAAW,MAAMH,EAAI,KACzBI,EAAS,kBAAoBZ,EAAc,GAAA,EAEzCW,EAAS,SAAW,KACtBJ,EAAUI,EAAS,IAAI,CAE3B,CAOI,OALJG,EAAAA,UAAU,IAAM,CACHJ,IACDG,GACZ,EAAG,CAAE,CAAA,EAED,CAACP,GAAU,CAACH,QACNY,EAAe,CAAA,CAAA,EAKrBC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,UAAWhB,EAAQ,KAAK,KACxB,UAAW,0BACX,MAAM,aAAA,CACR,QAECiB,EAAU,CAAA,UAAU,OACnB,SAACJ,EAAA,KAAAK,EAAA,CAAI,UAAU,yBACb,SAAA,CAACH,EAAA,IAAAI,EAAA,CAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,UAAU,OACpC,SAAAN,EAAAA,KAACO,EACC,CAAA,SAAA,CAACL,EAAAA,IAAAK,EAAK,OAAL,CACC,SAAAP,EAAA,KAACQ,GAAM,UAAU,aAAa,IAAK,EACjC,SAAA,CAAAN,MAAC,MACC,CAAA,SAAAF,EAAAA,KAAC,KAAG,CAAA,UAAU,eAAe,SAAA,CAAA,uCACU,GAAA,CAAA,CACvC,CACF,CAAA,EACAE,EAAAA,IAAC,MAAI,CAAA,UAAU,UACb,SAAAA,EAAA,IAACO,GAAgB,KAAM,GAAI,UAAU,cAAA,CAAe,CACtD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACCT,EAAA,KAAAO,EAAK,KAAL,CAAU,UAAU,GACnB,SAAA,CAACL,EAAAA,IAAA,IAAA,CAAE,MAAO,CAAE,SAAU,QAAY,EAAA,UAAU,GAAG,SAI/C,0LAAA,CAAA,QACC,IAAE,CAAA,MAAO,CAAE,SAAU,UAAY,SAElC,sDAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAECA,EAAA,IAAAI,EAAA,CAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,UAAU,OACpC,SAAAJ,MAACQ,EAAsB,CAAA,QAAAvB,EAAkB,OAAAG,CAAgB,CAAA,EAC3D,EAECH,EAAQ,wBACNe,EAAAA,IAAAI,EAAA,CAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,UAAU,OACpC,SAACJ,EAAAA,IAAA,mBAAA,CAAmB,QAAAf,CAAkB,CAAA,EACxC,EAGDe,EAAA,IAAAI,EAAA,CAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,UAAU,OACpC,SAACJ,EAAA,IAAAS,EAAA,CAAc,CAAA,EACjB,EAECT,EAAA,IAAAI,EAAA,CAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,UAAU,OACpC,SAACJ,EAAA,IAAAU,EAAA,CAAsB,CAAA,EACzB,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ"}