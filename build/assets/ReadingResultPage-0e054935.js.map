{"version":3,"file":"ReadingResultPage-0e054935.js","sources":["../../src/pages/ieltstest/reading/ReadingResultPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxios from \"../../../utils/useAxios\";\nimport { API_URLS } from \"../../../utils/config\";\nimport ScoreSection from \"../../../components/ieltstest/ScoreSection\";\nimport { Accordion, Card, Col, Container, Row } from \"react-bootstrap\";\nimport LoadingContext from \"../../../context/layout/LoadingContext\";\n\nimport ReadingPassage from \"../../../components/ieltstest/reading/ReadingPassage\";\nimport ReadingSection from \"../../../components/ieltstest/reading/ReadingSection\";\nimport ReviewAnswers from \"../../../components/ieltstest/ReviewAnswers\";\nimport PageHeadingBriefinfo from \"../../../components/layout/PageHeadingBriefInfo\";\nimport OverallBandsCard from \"../../../components/ieltstest/OverallBandsCard\";\nimport FullTestNextModule from \"../../../components/ieltstest/FullTestNextModule\";\nimport CustomSplitPane from \"../../../components/layout/CustomSplitPane\";\nimport WhatsNextCard from \"../../../components/ieltstest/WhatsNextCard\";\nimport StartPracticeTestCard from \"../../../components/ieltstest/StartPracticeTestCard\";\nimport CommentsCard from \"../../../components/CommentsCard\";\nimport usePublicAxios from \"../../../utils/usePublicAxios\";\nimport UserTestInfoCard from \"../../../components/ieltstest/UserTestInfoCard\";\nimport TestReactionCard from \"../../../components/ieltstest/TestReactionCard\";\n\nconst module_type = \"reading\";\n\nconst ReadingResultPage = () => {\n  const api = usePublicAxios();\n  const { module_slug, attempt_slug } = useParams();\n  const [module, setModule] = useState(null);\n  const [attempt, setAttempt] = useState(null);\n  const [deviceType, setDeviceType] = useState(\"desktop\");\n  const [loadingBar, setLoadingBar] = useContext(LoadingContext);\n\n  async function getModule() {\n    const response = await api.post(\n      API_URLS.getReadingModule + module_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setModule(response.data);\n    }\n  }\n\n  async function getAttempt() {\n    const response = await api.post(\n      API_URLS.getReadingAttempt + attempt_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setAttempt(response.data);\n    } else {\n      console.error(\"Unable to fetch attempt at ListeningResult.jsx\");\n    }\n  }\n\n  useEffect(() => {\n    getAttempt();\n    getModule();\n  }, [loadingBar]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setDeviceType(\"mobile\");\n      } else {\n        setDeviceType(\"desktop\");\n      }\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const paneStyle = {\n    overflow: \"auto\",\n    height: `${deviceType === \"mobile\" ? \"65vh\" : \"95vh\"}`,\n  };\n\n  const paneWithBackgroundColor = {\n    ...paneStyle,\n    backgroundColor: \"#F5F5DC\",\n  };\n\n  const containerStyle = {\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    height: \"calc(100vh - 50px)\", // Assuming 50px for NavBar and 50px for Footer\n    overflow: \"auto\", // Prevent scrollbars on the main layout\n  };\n\n  useEffect(() => {\n    document.title = \"Reading Test Result  | KeenIELTS\";\n  }, []);\n\n  if (!module || !attempt || !attempt.evaluation) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"mt-4\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xl={10} lg={12} md={12} className=\"\">\n              <UserTestInfoCard attempt={attempt} module_type={module_type} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n      <div className=\"mb-4\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xl={10} lg={12} md={12} className=\"mt-3 mb-3\">\n              <OverallBandsCard\n                bands={attempt.bands}\n                description={attempt.bands_description}\n                color=\"reading\"\n              />\n            </Col>\n            <Col xl={10} lg={12} md={12}>\n              <Accordion defaultActiveKey={\"review_answer\"}>\n                <Accordion.Item eventKey=\"review_answer\">\n                  <Accordion.Header>\n                    <span className=\"text-black fw-bold\">Review Answers</span>\n                  </Accordion.Header>\n                  <Accordion.Body className=\"p-0\">\n                    <ReviewAnswers attempt={attempt} />\n                  </Accordion.Body>\n                </Accordion.Item>\n                {Object.keys(module.sections).map((item) => (\n                  <Accordion.Item eventKey={item} key={item}>\n                    <Accordion.Header>\n                      <span className=\"text-black fw-bold\">\n                        {module.sections[item].section}\n                      </span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"p-0\">\n                      <CustomSplitPane\n                        deviceType={deviceType}\n                        left={\n                          <ReadingPassage section={module.sections[item]} />\n                        }\n                        right={\n                          <ReadingSection\n                            section={module.sections[item]}\n                            user_answers={attempt.evaluation.all_sections[item]}\n                          />\n                        }\n                      />\n                    </Accordion.Body>\n                  </Accordion.Item>\n                ))}\n              </Accordion>\n            </Col>\n\n            {attempt.full_test_next_attempt && (\n              <Col xl={10} lg={12} md={12} className=\"my-3\">\n                <FullTestNextModule attempt={attempt} />\n              </Col>\n            )}\n\n            <Col xl={10} lg={12} md={12} className=\"mt-3\">\n              <TestReactionCard />\n            </Col>\n\n            <Col xl={10} lg={12} md={12} className=\"my-3\">\n              <WhatsNextCard />\n            </Col>\n\n            <Col xl={10} lg={12} md={12} className=\"mb-3\">\n              <StartPracticeTestCard />\n            </Col>\n\n            <Col xl={8} lg={10} md={12} className=\"mb-3\">\n              <CommentsCard unique_id={`${module_type}-${module_slug}`} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default ReadingResultPage;\n"],"names":["module_type","ReadingResultPage","api","usePublicAxios","module_slug","attempt_slug","useParams","module","setModule","useState","attempt","setAttempt","deviceType","setDeviceType","loadingBar","setLoadingBar","useContext","LoadingContext","getModule","response","API_URLS","getAttempt","useEffect","handleResize","jsxs","Fragment","jsx","Container","Row","Col","UserTestInfoCard","OverallBandsCard","Accordion","ReviewAnswers","item","CustomSplitPane","ReadingPassage","ReadingSection","FullTestNextModule","TestReactionCard","WhatsNextCard","StartPracticeTestCard","CommentsCard"],"mappings":"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"}