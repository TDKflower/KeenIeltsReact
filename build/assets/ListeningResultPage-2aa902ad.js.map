{"version":3,"file":"ListeningResultPage-2aa902ad.js","sources":["../../src/utils/useAxiosWithoutLoader.js","../../src/pages/ieltstest/listening/ListeningResultPage.jsx"],"sourcesContent":["import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport dayjs from \"dayjs\";\nimport AuthContext from \"../context/AuthContext\";\nimport { useContext, useEffect } from \"react\";\nimport LoadingContext from \"../context/layout/LoadingContext\";\nimport { DJANGO_BASE_URL } from \"./config\";\nimport ErrorContext from \"../context/layout/ErrorContext\";\n\nexport const baseURL = DJANGO_BASE_URL;\n\nconst useAxiosWithoutLoader = () => {\n  const { authTokens, setUser, setAuthTokens } = useContext(AuthContext);\n  const [error, setError] = useContext(ErrorContext);\n\n  const axiosInstance = axios.create({\n    baseURL,\n    headers: { Authorization: `Bearer ${authTokens?.access}` },\n  });\n\n  axiosInstance.interceptors.request.use(async (req) => {\n    try {\n      const user = jwt_decode(authTokens.access);\n      const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n\n      if (!isExpired) return req;\n\n      const response = await axios.post(`${baseURL}/account/token/refresh/`, {\n        refresh: authTokens.refresh,\n      });\n\n      localStorage.setItem(\"authTokens\", JSON.stringify(response.data));\n      setAuthTokens(response.data);\n      setUser(jwt_decode(response.data.access));\n\n      req.headers.Authorization = `Bearer ${response.data.access}`;\n      return req;\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setError(\n        \"Something went wrong. Please refresh the page and try again. If the problem persists, contact team@keenielts.com.\"\n      );\n      return Promise.reject(error);\n    }\n  });\n\n  return axiosInstance;\n};\n\nexport default useAxiosWithoutLoader;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport useAxios from \"../../../utils/useAxios\";\nimport { API_URLS } from \"../../../utils/config\";\nimport { useParams } from \"react-router\";\nimport { Accordion, Card, Col, Container, Row, Table } from \"react-bootstrap\";\nimport PageHeadingBriefinfo from \"../../../components/layout/PageHeadingBriefInfo\";\nimport ListeningSection from \"../../../components/ieltstest/listening/ListeningSection\";\nimport CustomAudioPlayer from \"../../../components/elements/audioplayer/CustomAudioPlayer\";\nimport useAxiosWithoutLoader from \"../../../utils/useAxiosWithoutLoader\";\nimport ScoreSection from \"../../../components/ieltstest/ScoreSection\";\nimport ReviewAnswers from \"../../../components/ieltstest/ReviewAnswers\";\nimport LoadingContext from \"../../../context/layout/LoadingContext\";\nimport OverallBandsCard from \"../../../components/ieltstest/OverallBandsCard\";\nimport FullTestInfoPage from \"../fulltest/FullTestInfoPage\";\nimport FullTestNextModule from \"../../../components/ieltstest/FullTestNextModule\";\nimport WhatsNextCard from \"../../../components/ieltstest/WhatsNextCard\";\nimport StartPracticeTestCard from \"../../../components/ieltstest/StartPracticeTestCard\";\nimport CommentsCard from \"../../../components/CommentsCard\";\n\nconst module_type = \"listening\";\n\nconst ListeningResultPage = () => {\n  const api = useAxios();\n  const api1 = useAxiosWithoutLoader();\n  const { module_slug, attempt_slug } = useParams();\n  const [attempt, setAttempt] = useState(null);\n  const [module, setModule] = useState(null);\n  const [currentAudioTime, setCurrentAudioTime] = useState(null);\n  const [loadingBar, setLoadingBar] = useContext(LoadingContext);\n\n  async function getAttempt() {\n    const response = await api.post(\n      API_URLS.getListeningAttempt + attempt_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setAttempt(response.data);\n    } else {\n      console.error(\"Unable to fetch attempt at ListeningResult.jsx\");\n    }\n  }\n\n  async function getModule() {\n    const response = await api1.post(\n      API_URLS.getListeningModule + module_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setModule(response.data);\n    }\n  }\n\n  useEffect(() => {\n    getAttempt();\n    getModule();\n  }, []);\n\n  useEffect(() => {\n    document.title = \"Listening Test Result  | KeenIELTS\";\n  }, []);\n\n  if (!module || !attempt || !attempt.evaluation) {\n    return null;\n  }\n\n  function handleChangeAudioTime(section) {\n    setCurrentAudioTime(section.audio_start_time);\n  }\n\n  return (\n    <>\n      <PageHeadingBriefinfo\n        pagetitle={attempt.book.name}\n        briefinfo={\"Listening\" + \" Test Result\"}\n        color=\"bg-listening\"\n      />\n\n      <div className=\"my-4\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xl={8} lg={10} md={12} className=\"mt-3 mb-3\">\n              <OverallBandsCard\n                bands={attempt.bands}\n                description={attempt.bands_description}\n                color=\"listening\"\n              />\n            </Col>\n\n            <Col xl={8} lg={10} md={12} className=\"mb-3\">\n              <Card>\n                <Card.Body className=\"m-0 p-1\">\n                  <CustomAudioPlayer\n                    src={module.audio}\n                    start_time={currentAudioTime}\n                  />\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col xl={8} lg={10} md={12}>\n              <Accordion defaultActiveKey=\"0\">\n                <Accordion.Item eventKey=\"0\">\n                  <Accordion.Header>\n                    <span className=\"text-black fw-bold\">Review Answers</span>\n                  </Accordion.Header>\n                  <Accordion.Body className=\"p-0 m-0\">\n                    <ReviewAnswers attempt={attempt} />\n                  </Accordion.Body>\n                </Accordion.Item>\n                {Object.entries(attempt.evaluation.all_sections).map(\n                  (section, index) => (\n                    <Accordion.Item key={section[0]} eventKey={index + 1}>\n                      <Accordion.Header>\n                        <span className=\"text-black fw-bold\">\n                          Section {index + 1} â€¢ {section[1][\"correct\"]}/\n                          {section[1][\"correct\"] + section[1][\"incorrect\"]}\n                        </span>\n                      </Accordion.Header>\n                      <Accordion.Body className=\"p-0 m-0\">\n                        <Table bordered className=\"table-sm\">\n                          <thead>\n                            <tr>\n                              <th scope=\"col\">#</th>\n                              <th scope=\"col\">Your Answer</th>\n                              <th scope=\"col\">Correct Answer</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {Object.entries(section[1]).map((item, index) => {\n                              if (item[0].split(\"-\")[0] === \"que\") {\n                                return (\n                                  <tr\n                                    key={index}\n                                    className={\n                                      item[1][\"is_user_answer_correct\"] === true\n                                        ? \"table-success\"\n                                        : \"table-danger\"\n                                    }\n                                  >\n                                    <td className=\"fw-bold\">\n                                      {item[0].split(\"-\")[1]}\n                                    </td>\n                                    <td className=\"text-black\">\n                                      {item[1][\"user_answer\"]}\n                                    </td>\n                                    <td className=\"text-black\">\n                                      {item[1][\"correct_answer\"]}\n                                    </td>\n                                  </tr>\n                                );\n                              } else {\n                                return null; // return null if you don't want to render anything\n                              }\n                            })}\n                          </tbody>\n                        </Table>\n                      </Accordion.Body>\n                    </Accordion.Item>\n                  )\n                )}\n              </Accordion>\n            </Col>\n            <Col xl={8} lg={10} md={12} className=\"\">\n              <Row>\n                {module.sections.length > 0 &&\n                  module.sections.map((section) => (\n                    <div key={section.id} className=\"mt-3\">\n                      <ListeningSection\n                        section={section}\n                        user_answers={attempt.evaluation.all_questions}\n                        setCurrentSection={handleChangeAudioTime}\n                      />\n                    </div>\n                  ))}\n              </Row>\n            </Col>\n\n            {attempt.full_test_next_attempt && (\n              <Col xl={8} lg={10} md={12} className=\"my-3\">\n                <FullTestNextModule attempt={attempt} />\n              </Col>\n            )}\n\n            <Col xl={8} lg={10} md={12} className=\"my-3\">\n              <WhatsNextCard />\n            </Col>\n\n            <Col xl={8} lg={10} md={12} className=\"mb-3\">\n              <StartPracticeTestCard />\n            </Col>\n\n            <Col xl={8} lg={10} md={12} className=\"mb-3\">\n              <CommentsCard unique_id={`${module_type}-${module_slug}`} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default ListeningResultPage;\n"],"names":["baseURL","DJANGO_BASE_URL","useAxiosWithoutLoader","authTokens","setUser","setAuthTokens","useContext","AuthContext","error","setError","ErrorContext","axiosInstance","axios","req","user","jwt_decode","dayjs","response","module_type","ListeningResultPage","api","useAxios","api1","module_slug","attempt_slug","useParams","attempt","setAttempt","useState","module","setModule","currentAudioTime","setCurrentAudioTime","LoadingContext","getAttempt","API_URLS","getModule","useEffect","handleChangeAudioTime","section","jsxs","Fragment","jsx","PageHeadingBriefinfo","Container","Row","Col","OverallBandsCard","Card","CustomAudioPlayer","Accordion","ReviewAnswers","index","Table","item","ListeningSection","FullTestNextModule","WhatsNextCard","StartPracticeTestCard","CommentsCard"],"mappings":"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"}