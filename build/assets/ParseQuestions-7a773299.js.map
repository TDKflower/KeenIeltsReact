{"version":3,"file":"ParseQuestions-7a773299.js","sources":["../../src/components/ieltstest/QuestionBadge.jsx","../../src/components/ieltstest/ParseQuestions.jsx"],"sourcesContent":["import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { FiCheckCircle, FiXCircle } from \"react-icons/fi\";\n\nconst QuestionBadge = ({\n  children,\n  user_answers,\n  queName,\n  form_field,\n  moduleType,\n}) => {\n  return (\n    <Badge\n      className=\"fw-bold p-1 m-1 \"\n      style={{\n        fontSize: \"16px\",\n      }}\n      bg={\n        user_answers &&\n        user_answers[\"que-\" + queName[1]][\"is_user_answer_correct\"]\n          ? \"success\"\n          : user_answers\n          ? \"danger\"\n          : moduleType.toLowerCase()\n      }\n    >\n      {queName[1]}\n      {user_answers &&\n        (user_answers[\"que-\" + queName[1]][\"is_user_answer_correct\"] ? (\n          <FiCheckCircle size={18} style={{ marginLeft: \"5px\" }} />\n        ) : (\n          <FiXCircle size={18} style={{ marginLeft: \"5px\" }} />\n        ))}\n      <span className=\"\"> {form_field}</span>\n    </Badge>\n  );\n};\n\nexport default QuestionBadge;\n","import React, { useState, useEffect } from \"react\";\nimport parse from \"html-react-parser\";\nimport QuestionBadge from \"./QuestionBadge\";\n\nconst ParseQuestions = ({\n  section,\n  section_form_values,\n  user_answers,\n  handleChange,\n  moduleType = \"Listening\", // Default to 'Listening' module\n}) => {\n  const [formValues, setFormValues] = useState({});\n\n  useEffect(() => {\n    if (section_form_values) {\n      setFormValues(section_form_values);\n    }\n  }, [section_form_values]);\n\n  const handleInputChange = (event) => {\n    if (moduleType === \"Reading\") {\n      const { name, value } = event.target;\n      const key = name.split(\"-\")[1];\n      setFormValues({\n        ...formValues,\n        [\"que-\" + key]: value,\n      });\n      if (handleChange) {\n        handleChange(event);\n      }\n    }\n  };\n\n  const renderInput = (domNode, queName) => {\n    const commonProps = {\n      ...domNode.attribs,\n\n      required: false,\n      onChange: moduleType === \"Reading\" ? handleInputChange : handleChange,\n      disabled: !!user_answers,\n    };\n\n    if (domNode.name === \"input\" && domNode.attribs.type === \"radio\") {\n      return (\n        <input\n          type=\"radio\"\n          {...commonProps}\n          className={`${domNode.attribs.className || \"\"} custom-form-control`}\n          checked={\n            user_answers\n              ? user_answers[\"que-\" + queName[1]][\"user_answer\"] ===\n                domNode.attribs.value\n              : moduleType === \"Reading\"\n              ? formValues[\"que-\" + queName[1]] === domNode.attribs.value\n              : undefined\n          }\n        />\n      );\n    }\n\n    if (domNode.name === \"select\") {\n      return (\n        <select\n          {...commonProps}\n          className={`${domNode.attribs.className || \"\"} custom-form-select`}\n          value={\n            user_answers\n              ? user_answers[\"que-\" + queName[1]][\"user_answer\"]\n              : moduleType === \"Reading\"\n              ? formValues[\"que-\" + queName[1]]\n              : undefined\n          }\n        >\n          {Array.from(domNode.children || []).map((optionNode, idx) => {\n            const optionValue = optionNode.children[0]\n              ? optionNode.children[0].data\n              : \"\";\n            return (\n              <option\n                key={idx}\n                value={optionNode.attribs.value}\n                {...optionNode.attribs}\n              >\n                {optionValue}\n              </option>\n            );\n          })}\n        </select>\n      );\n    }\n\n    return React.createElement(domNode.name, {\n      ...commonProps,\n      value: user_answers\n        ? user_answers[\"que-\" + queName[1]][\"user_answer\"]\n        : moduleType === \"Reading\"\n        ? formValues[\"que-\" + queName[1]]\n        : undefined,\n    });\n  };\n\n  if (!section || !section.questions) {\n    return null;\n  }\n\n  return (\n    <div className=\"parser-block\">\n      {parse(section.questions, {\n        replace: (domNode) => {\n          if (\n            domNode.name === \"input\" ||\n            domNode.name === \"textarea\" ||\n            domNode.name === \"select\"\n          ) {\n            let queName = domNode.attribs.name.split(\"-\");\n\n            return (\n              <span id={`que-${queName[1]}`} className=\"\">\n                {user_answers &&\n                  domNode.attribs.type === \"radio\" &&\n                  user_answers[\"que-\" + queName[1]][\"user_answer\"] ===\n                    domNode.attribs.value && (\n                    <QuestionBadge\n                      user_answers={user_answers}\n                      queName={queName}\n                      moduleType={moduleType}\n                    />\n                  )}\n\n                {domNode.attribs.type !== \"radio\" ? (\n                  <QuestionBadge\n                    user_answers={user_answers}\n                    queName={queName}\n                    form_field={renderInput(domNode, queName)}\n                    moduleType={moduleType}\n                  />\n                ) : (\n                  renderInput(domNode, queName)\n                )}\n              </span>\n            );\n          }\n        },\n      })}\n    </div>\n  );\n};\n\nexport default ParseQuestions;\n"],"names":["QuestionBadge","children","user_answers","queName","form_field","moduleType","jsxs","Badge","jsx","FiCheckCircle","FiXCircle","ParseQuestions","section","section_form_values","handleChange","formValues","setFormValues","useState","useEffect","handleInputChange","event","name","value","key","renderInput","domNode","commonProps","optionNode","idx","optionValue","React","parse"],"mappings":"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"}