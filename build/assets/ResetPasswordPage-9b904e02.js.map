{"version":3,"file":"ResetPasswordPage-9b904e02.js","sources":["../../src/pages/base/ResetPasswordPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport * as Yup from \"yup\";\nimport { DJANGO_BASE_URL } from \"../../utils/config\";\nimport { Container, Row, Col, Accordion, Card, Button } from \"react-bootstrap\";\nimport BaseForm from \"../../components/layout/BaseForm\";\nimport { Link } from \"react-router-dom\";\nimport usePublicAxios from \"../../utils/usePublicAxios\";\n\nconst ResetPasswordPage = () => {\n  let { registerUser, registrationError, user } = useContext(AuthContext);\n  const [error, setError] = useState(null);\n  const form_fields = [\n    {\n      type: \"email\",\n      label: \"Email\",\n      id: \"email\",\n      invalid_feedback: \"e.g. yourname@gmail.com\",\n      placeholder: \"Enter your Email Address\",\n    },\n  ];\n\n  const api = usePublicAxios();\n\n  const ResetSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  });\n\n  const resetPassword = async (values, handleSuccess) => {\n    try {\n      const response = await api.post(\n        DJANGO_BASE_URL + \"/account/password_reset/\",\n        values\n      );\n      handleSuccess();\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(error.response.data.message);\n    }\n  };\n\n  useEffect(() => {\n    if (user) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  return (\n    <>\n      <Container className=\"mb-5\">\n        <Row className=\"align-items-center justify-content-center \">\n          <Col lg={5} md={8} className=\"\">\n            <Card className=\"mt-5\">\n              <Card.Body className=\"\">\n                <div className=\"mb-4\">\n                  <h1 className=\"mb-1 fw-bold\">Reset Password</h1>\n                  <span>\n                    We will send you an email to reset your password. Please\n                    make sure to check your spam folder.\n                  </span>\n                </div>\n                {/* Form */}\n                <BaseForm\n                  form_fields={form_fields}\n                  validation_schema={ResetSchema}\n                  on_submit={resetPassword}\n                  submit_label={\"Send Reset Email\"}\n                  nonFieldErrors={error}\n                  successMessage=\"Password reset email sent successfully!\"\n                />\n              </Card.Body>\n              <Card.Footer>\n                <Row>\n                  <Col sm={12} md={6} className=\"my-2\">\n                    <Button\n                      as={Link}\n                      to={\"/login/\"}\n                      variant=\"outline-primary\"\n                      className=\"w-100\"\n                    >\n                      Sign In\n                    </Button>\n                  </Col>\n                  <Col sm={12} md={6} className=\"my-2\">\n                    <Button\n                      as={Link}\n                      to={\"/register/\"}\n                      variant=\"outline-primary\"\n                      className=\"w-100\"\n                    >\n                      Create Account\n                    </Button>\n                  </Col>\n                </Row>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default ResetPasswordPage;\n"],"names":["ResetPasswordPage","registerUser","registrationError","user","useContext","AuthContext","error","setError","useState","form_fields","api","usePublicAxios","ResetSchema","Yup.object","Yup.string","resetPassword","values","handleSuccess","response","DJANGO_BASE_URL","useEffect","jsx","Fragment","Container","Row","Col","jsxs","Card","BaseForm","Button","Link"],"mappings":"sIASA,MAAMA,EAAoB,IAAM,CAC9B,GAAI,CAAE,aAAAC,EAAc,kBAAAC,EAAmB,KAAAC,CAAK,EAAIC,EAAAA,WAAWC,CAAW,EACtE,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAAS,IAAI,EACjCC,EAAc,CAClB,CACE,KAAM,QACN,MAAO,QACP,GAAI,QACJ,iBAAkB,0BAClB,YAAa,0BACf,CAAA,EAGIC,EAAMC,IAENC,EAAcC,EAAW,EAAE,MAAM,CACrC,MAAOC,EAAW,EAAE,MAAM,eAAe,EAAE,SAAS,UAAU,CAAA,CAC/D,EAEKC,EAAgB,MAAOC,EAAQC,IAAkB,CACjD,GAAA,CACI,MAAAC,EAAW,MAAMR,EAAI,KACzBS,EAAkB,2BAClBH,CAAA,EAEYC,UACPX,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAClCA,EAAAA,EAAM,SAAS,KAAK,OAAO,CACtC,CAAA,EAGFc,OAAAA,EAAAA,UAAU,IAAM,CACVjB,GACF,SAAS,GAAG,CAEhB,EAAG,CAAE,CAAA,EAGHkB,EAAA,IAAAC,EAAA,SAAA,CACE,eAACC,EAAU,CAAA,UAAU,OACnB,SAACF,EAAA,IAAAG,EAAA,CAAI,UAAU,6CACb,SAAAH,EAAAA,IAACI,GAAI,GAAI,EAAG,GAAI,EAAG,UAAU,GAC3B,SAACC,EAAA,KAAAC,EAAA,CAAK,UAAU,OACd,SAAA,CAAAD,EAAA,KAACC,EAAK,KAAL,CAAU,UAAU,GACnB,SAAA,CAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACL,EAAA,IAAA,KAAA,CAAG,UAAU,eAAe,SAAc,iBAAA,EAC3CA,EAAAA,IAAC,QAAK,SAGN,+FAAA,CAAA,CAAA,EACF,EAEAA,EAAA,IAACO,EAAA,CACC,YAAAnB,EACA,kBAAmBG,EACnB,UAAWG,EACX,aAAc,mBACd,eAAgBT,EAChB,eAAe,yCAAA,CACjB,CAAA,EACF,EACCe,EAAA,IAAAM,EAAK,OAAL,CACC,gBAACH,EACC,CAAA,SAAA,CAAAH,MAACI,GAAI,GAAI,GAAI,GAAI,EAAG,UAAU,OAC5B,SAAAJ,EAAA,IAACQ,EAAA,CACC,GAAIC,EACJ,GAAI,UACJ,QAAQ,kBACR,UAAU,QACX,SAAA,SAAA,CAAA,EAGH,QACCL,EAAI,CAAA,GAAI,GAAI,GAAI,EAAG,UAAU,OAC5B,SAAAJ,EAAA,IAACQ,EAAA,CACC,GAAIC,EACJ,GAAI,aACJ,QAAQ,kBACR,UAAU,QACX,SAAA,gBAAA,CAAA,EAGH,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}