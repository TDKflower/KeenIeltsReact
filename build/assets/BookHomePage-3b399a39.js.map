{"version":3,"file":"BookHomePage-3b399a39.js","sources":["../../src/components/layout/BookHomePage/BookHomePageLoader.jsx","../../src/pages/ieltstest/BookHomePage.jsx"],"sourcesContent":["import React from \"react\";\nimport EvaluationLoader from \"../../ieltstest/EvaluationLoader\";\n\nconst BookHomePageLoader = () => {\n  return (\n    <EvaluationLoader\n      title={\"Please Wait While We Load Your Book\"}\n      description={\n        \"We are loading your book; it should not take more than a few seconds. If it doesn't load within 1 minute, please refresh to try again.\"\n      }\n    />\n  );\n};\n\nexport default BookHomePageLoader;\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport {\n  Col,\n  Row,\n  Container,\n  Nav,\n  Card,\n  Tab,\n  Accordion,\n  Table,\n  Button,\n  Stack,\n} from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport { FiKey, FiUpload } from \"react-icons/fi\";\nimport { MdCopyright } from \"react-icons/md\";\nimport usePublicAxios from \"../../utils/usePublicAxios\";\nimport useAxios from \"../../utils/useAxios\";\nimport YourRecentTestsCard from \"../../components/layout/student/YourRecentTestsCard\";\nimport AuthContext from \"../../context/AuthContext\";\nimport useGetSmartTest from \"../../components/ieltstest/GetSmartTest\";\nimport BookHomePageLoader from \"../../components/layout/BookHomePage/BookHomePageLoader\";\nimport TestTypeSwitch from \"../../components/ieltstest/TestTypeSwitch\";\nimport TestTypeContext from \"../../context/TestTypeContext\";\nimport CommentsCard from \"../../components/CommentsCard\";\n\nconst BookHomePage = () => {\n  const book_slug = useParams().book_slug;\n  const [book, setBook] = useState(null);\n  const [attempts, setAttempts] = useState(null);\n  const api_public = usePublicAxios();\n  const api = useAxios();\n  const [testType, setTestType] = useContext(TestTypeContext);\n  let { registerUser, registrationError, user } = useContext(AuthContext);\n  const getSmartTest = useGetSmartTest();\n\n  useEffect(() => {\n    if (book) {\n      document.title =\n        book.name + \" | Practice Real IELTS Tests for Free | KeenIELTS\";\n    }\n  }, [book]);\n\n  function getBook() {\n    api_public\n      .get(\"ieltstest/book/\" + book_slug + \"/\", {\n        params: {\n          // Use the `params` key to include query parameters\n          testType: testType,\n        },\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          setBook(response.data);\n        } else {\n          console.log(response);\n        }\n      });\n  }\n\n  function getAttempts() {\n    api\n      .post(\"student/get_attempts_from_book/\" + book_slug + \"/\")\n      .then((response) => {\n        if (response.status === 200) {\n          setAttempts(response.data);\n        } else {\n          console.log(response);\n        }\n      });\n  }\n\n  useEffect(() => {\n    if (testType) {\n      getBook();\n      if (user) {\n        getAttempts();\n      }\n    }\n  }, [testType]);\n\n  if (!book || (user && !attempts)) {\n    return <BookHomePageLoader />;\n  }\n\n  const modules_items = [\n    \"listening_module\",\n    \"reading_module\",\n    \"writing_module\",\n    \"speaking_module\",\n  ];\n\n  return (\n    <>\n      <section className=\"pt-lg-8 pb-lg-16 pt-8 pb-12 bg-primary\">\n        <Container>\n          <Row className=\"align-items-center\">\n            <Col xl={7} lg={7} md={12} sm={12}>\n              <div>\n                <h1 className=\"text-white display-4 fw-semi-bold\">\n                  {book.name}\n                </h1>\n                <p className=\"text-white mb-4 lead\">{book.description}</p>\n                <div className=\"d-flex align-items-center\"></div>\n              </div>\n            </Col>\n          </Row>\n\n          <Row className=\"gy-3 gy-lg-0\">\n            {/* Adjust column sizes and add gutters */}\n            <Col xs={12} className=\"mb-2  text-md-start\">\n              <span className=\"text-white\">\n                <FiUpload className=\"text-white-50\" />\n                <span className=\"px-2 text-capitalize\">\n                  {book.institute.name}\n                </span>\n              </span>\n            </Col>\n\n            <Col xs={12} className=\"mb-2  text-md-start\">\n              <span className=\"text-white\">\n                <MdCopyright className=\"text-white-50\" />\n                <span className=\"px-2 text-capitalize\">{book.copyright}</span>\n              </span>\n            </Col>\n\n            <Col xs={12} className=\"mb-2  text-md-start\">\n              <span className=\"text-white\">\n                <FiKey className=\"text-white-50\" />\n                <span className=\"px-2 text-capitalize\">{book.difficulty}</span>\n              </span>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n      {/* Page content */}\n      <section className=\"pb-10\">\n        <Container>\n          <Row>\n            <Col lg={4} md={12} sm={12} className=\"mt-n10 mb-9 mb-lg-0\">\n              {/* Card */}\n              <Card className=\" mb-4\">\n                <div className=\"p-1 \">\n                  <img src={book.cover} className=\"w-100 border-bottom\" />\n                </div>\n\n                {/* Card body */}\n                <Card.Body className=\"py-2\">\n                  <div className=\"  \">\n                    <TestTypeSwitch />\n                  </div>\n                </Card.Body>\n                <Card.Footer>\n                  <div className=\"d-grid \">\n                    <Button\n                      className=\"btn btn-primary mb-2\"\n                      onClick={() => {\n                        getSmartTest(\"fulltest\", book_slug, \"\");\n                      }}\n                    >\n                      Start Full Test\n                    </Button>\n                  </div>\n                </Card.Footer>\n              </Card>\n            </Col>\n            <Col lg={8} md={12} sm={12} className=\"mt-n10 mb-4 mb-lg-0\">\n              <Row>\n                <Col xs={12}>\n                  <Tab.Container defaultActiveKey=\"tests\">\n                    <Card>\n                      <Nav className=\"nav-lb-tab\">\n                        {[\"Tests\", \"Your Attempts\"].map((item, index) => (\n                          <Nav.Item key={index}>\n                            <Nav.Link\n                              eventKey={item.toLowerCase()}\n                              className=\"mb-sm-3 mb-md-0\"\n                            >\n                              {item}\n                            </Nav.Link>\n                          </Nav.Item>\n                        ))}\n                      </Nav>\n                      <Card.Body className=\"p-0\">\n                        <Tab.Content>\n                          <Tab.Pane eventKey=\"tests\" className=\"my-2\">\n                            <Accordion defaultActiveKey={0} flush>\n                              {book.tests.map((item, index) => (\n                                <Accordion.Item eventKey={index} key={index}>\n                                  <Accordion.Header className=\"\">\n                                    <span className=\"text-black fw-bold\">\n                                      {item.name}\n                                    </span>\n                                  </Accordion.Header>\n                                  <Accordion.Body className=\"p-0\">\n                                    <Table striped className=\"text-nowrap\">\n                                      <tbody>\n                                        {modules_items.map((module, index) =>\n                                          item[module].map(\n                                            (module_item, moduleIndex) => (\n                                              <tr\n                                                key={`${index}-${moduleIndex}`}\n                                              >\n                                                <td>\n                                                  <Stack\n                                                    direction=\"horizontal\"\n                                                    gap={1}\n                                                  >\n                                                    <div>\n                                                      {module_item.name}\n                                                    </div>{\" \"}\n                                                    {/* Replace this with actual data if needed */}\n                                                    <div className=\"ms-auto\">\n                                                      <Button\n                                                        className=\"btn-sm \"\n                                                        variant={\n                                                          module.split(\"_\")[0]\n                                                        }\n                                                        onClick={() => {\n                                                          getSmartTest(\n                                                            module.split(\n                                                              \"_\"\n                                                            )[0],\n                                                            book_slug,\n                                                            item.slug\n                                                          );\n                                                        }}\n                                                      >\n                                                        Start Test\n                                                      </Button>\n                                                    </div>\n                                                  </Stack>\n                                                </td>\n                                              </tr>\n                                            )\n                                          )\n                                        )}\n                                      </tbody>\n                                    </Table>\n                                  </Accordion.Body>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Tab.Pane>\n\n                          <Tab.Pane eventKey=\"your attempts\" className=\"my-2\">\n                            {user ? (\n                              <YourRecentTestsCard tests={attempts} />\n                            ) : (\n                              <div className=\"text-center p-4\">\n                                <h3>\n                                  Please sign in or create an account to view\n                                  your test attempts.\n                                </h3>\n                                <div className=\"mt-3\">\n                                  <Link\n                                    to=\"/login/\"\n                                    className=\"btn btn-primary \"\n                                  >\n                                    Sign in\n                                  </Link>\n                                  <Link\n                                    to=\"/register/\"\n                                    className=\"btn btn-outline-primary  ms-2\"\n                                  >\n                                    Create Account\n                                  </Link>\n                                </div>\n                              </div>\n                            )}\n                          </Tab.Pane>\n                        </Tab.Content>\n                      </Card.Body>\n                    </Card>\n                  </Tab.Container>\n                </Col>\n                <Col xs={12} className=\"my-3\">\n                  <CommentsCard unique_id={`book-${book_slug}`} />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default BookHomePage;\n"],"names":["BookHomePageLoader","jsx","EvaluationLoader","BookHomePage","book_slug","useParams","book","setBook","useState","attempts","setAttempts","api_public","usePublicAxios","api","useAxios","testType","setTestType","useContext","TestTypeContext","registerUser","registrationError","user","AuthContext","getSmartTest","useGetSmartTest","useEffect","getBook","response","getAttempts","modules_items","jsxs","Fragment","Container","Row","Col","FiUpload","MdCopyright","FiKey","Card","TestTypeSwitch","Button","Tab","Nav","item","index","Accordion","Table","module","module_item","moduleIndex","Stack","YourRecentTestsCard","Link","CommentsCard"],"mappings":"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"}