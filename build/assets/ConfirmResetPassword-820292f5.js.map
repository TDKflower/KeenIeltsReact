{"version":3,"file":"ConfirmResetPassword-820292f5.js","sources":["../../src/pages/base/ConfirmResetPassword.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport * as Yup from \"yup\";\nimport { DJANGO_BASE_URL } from \"../../utils/config\";\nimport { Container, Row, Col, Accordion, Card, Button } from \"react-bootstrap\";\nimport BaseForm from \"../../components/layout/BaseForm\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport usePublicAxios from \"../../utils/usePublicAxios\";\n\nconst ConfirmResetPassword = () => {\n  let { registerUser, registrationError, user } = useContext(AuthContext);\n  const [defaultEmail, setDefaultEmail] = useState(\"\");\n  const [defaultToken, setDefaultToken] = useState(\"\");\n\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const api = usePublicAxios();\n\n  useEffect(() => {\n    // Function to parse the URL query string\n    const queryParams = new URLSearchParams(location.search);\n    const email = queryParams.get(\"email\");\n    const token = queryParams.get(\"token\");\n\n    if (email) {\n      setDefaultEmail(email);\n    }\n\n    if (token) {\n      setDefaultToken(token);\n    }\n  }, [location]);\n\n  const form_fields = [\n    {\n      type: \"email\",\n      label: \"Email\",\n      id: \"email\",\n      invalid_feedback: \"e.g. yourname@gmail.com\",\n      placeholder: \"Enter your Email Address\",\n      value: defaultEmail,\n      disabled: defaultEmail ? true : false,\n    },\n    {\n      type: \"text\",\n      label: \"Token\",\n      id: \"token\",\n      invalid_feedback: \"Reset Password Token\",\n      placeholder: \"Enter your Reset Password Token\",\n      value: defaultToken,\n      disabled: defaultToken ? true : false,\n    },\n    {\n      type: \"password\",\n      label: \"Password\",\n      id: \"password\",\n      invalid_feedback: \"Password should be strong\",\n      placeholder: \"*************\",\n    },\n    {\n      type: \"password\",\n      label: \"Confirm Password\",\n      id: \"password2\",\n      invalid_feedback: \"Confirm password should  be same as Password\",\n      placeholder: \"*************\",\n    },\n  ];\n\n  const ConfirmResetSchema = Yup.object().shape({\n    token: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n    password: Yup.string()\n      .required(\"Password is required\")\n      .min(\n        8,\n        \"password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special\"\n      )\n      .minLowercase(1, \"password must contain at least 1 lower case letter\")\n      .minUppercase(1, \"password must contain at least 1 upper case letter\")\n      .minNumbers(1, \"password must contain at least 1 number\")\n      .minSymbols(1, \"password must contain at least 1 special character\"),\n    password2: Yup.string().oneOf(\n      [Yup.ref(\"password\"), null],\n      \"Passwords must match\"\n    ),\n  });\n\n  const ConfirmResetPassword = async (values, handleSuccess) => {\n    try {\n      const response = await api.post(\n        DJANGO_BASE_URL + \"/account/password_reset/confirm/\",\n        values\n      );\n      handleSuccess();\n      navigate(\n        \"/login/?alert=Password Reset Successful, Please Login Now&variant=success\"\n      );\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(error.response.data.message);\n    }\n  };\n\n  return (\n    <>\n      <Container className=\"mb-5\">\n        <Row className=\"align-items-center justify-content-center \">\n          <Col lg={5} md={8} className=\"\">\n            <Card className=\"mt-5\">\n              <Card.Body className=\"\">\n                <div className=\"mb-4\">\n                  <h1 className=\"mb-1 fw-bold\">Reset Password </h1>\n                </div>\n\n                <BaseForm\n                  form_fields={form_fields}\n                  submit_label={\"Set Password\"}\n                  on_submit={ConfirmResetPassword}\n                  serverErrors={error}\n                  validation_schema={ConfirmResetSchema}\n                  successMessage=\"Password Reset Successful\"\n                />\n\n                <div className=\"mb-4\" />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default ConfirmResetPassword;\n"],"names":["ConfirmResetPassword","useContext","AuthContext","defaultEmail","setDefaultEmail","useState","defaultToken","setDefaultToken","error","setError","location","useLocation","navigate","useNavigate","api","usePublicAxios","useEffect","queryParams","email","token","form_fields","ConfirmResetSchema","Yup.object","Yup.string","Yup.ref","values","handleSuccess","response","DJANGO_BASE_URL","jsx","Fragment","Container","Row","Col","Card","jsxs","BaseForm"],"mappings":"+IASA,MAAMA,EAAuB,IAAM,CACeC,EAAAA,WAAWC,CAAW,EACtE,KAAM,CAACC,EAAcC,CAAe,EAAIC,WAAS,EAAE,EAC7C,CAACC,EAAcC,CAAe,EAAIF,WAAS,EAAE,EAE7C,CAACG,EAAOC,CAAQ,EAAIJ,WAAS,IAAI,EACjCK,EAAWC,IACXC,EAAWC,IACXC,EAAMC,IAEZC,EAAAA,UAAU,IAAM,CAEd,MAAMC,EAAc,IAAI,gBAAgBP,EAAS,MAAM,EACjDQ,EAAQD,EAAY,IAAI,OAAO,EAC/BE,EAAQF,EAAY,IAAI,OAAO,EAEjCC,GACFd,EAAgBc,CAAK,EAGnBC,GACFZ,EAAgBY,CAAK,CACvB,EACC,CAACT,CAAQ,CAAC,EAEb,MAAMU,EAAc,CAClB,CACE,KAAM,QACN,MAAO,QACP,GAAI,QACJ,iBAAkB,0BAClB,YAAa,2BACb,MAAOjB,EACP,SAAU,EAAAA,CACZ,EACA,CACE,KAAM,OACN,MAAO,QACP,GAAI,QACJ,iBAAkB,uBAClB,YAAa,kCACb,MAAOG,EACP,SAAU,EAAAA,CACZ,EACA,CACE,KAAM,WACN,MAAO,WACP,GAAI,WACJ,iBAAkB,4BAClB,YAAa,eACf,EACA,CACE,KAAM,WACN,MAAO,mBACP,GAAI,YACJ,iBAAkB,+CAClB,YAAa,eACf,CAAA,EAGIe,EAAqBC,EAAW,EAAE,MAAM,CAC5C,MAAOC,EAAW,EAAE,SAAS,UAAU,EACvC,MAAOA,EAAW,EAAE,MAAM,eAAe,EAAE,SAAS,UAAU,EAC9D,SAAUA,EACP,EAAA,SAAS,sBAAsB,EAC/B,IACC,EACA,gHAED,EAAA,aAAa,EAAG,oDAAoD,EACpE,aAAa,EAAG,oDAAoD,EACpE,WAAW,EAAG,yCAAyC,EACvD,WAAW,EAAG,oDAAoD,EACrE,UAAWA,EAAI,EAAS,MACtB,CAACC,EAAQ,UAAU,EAAG,IAAI,EAC1B,sBACF,CAAA,CACD,EAEKxB,EAAuB,MAAOyB,EAAQC,IAAkB,CACxD,GAAA,CACI,MAAAC,EAAW,MAAMb,EAAI,KACzBc,EAAkB,mCAClBH,CAAA,EAEYC,IACdd,EACE,2EAAA,QAEKJ,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAClCA,EAAAA,EAAM,SAAS,KAAK,OAAO,CACtC,CAAA,EAIA,OAAAqB,EAAAA,IAAAC,EAAAA,SAAA,CACE,SAACD,EAAAA,IAAAE,EAAA,CAAU,UAAU,OACnB,SAACF,EAAA,IAAAG,EAAA,CAAI,UAAU,6CACb,SAACH,EAAAA,IAAAI,EAAA,CAAI,GAAI,EAAG,GAAI,EAAG,UAAU,GAC3B,SAAAJ,EAAAA,IAACK,EAAK,CAAA,UAAU,OACd,SAAAC,EAAAA,KAACD,EAAK,KAAL,CAAU,UAAU,GACnB,SAAA,CAACL,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,MAAG,UAAU,eAAe,2BAAe,CAC9C,CAAA,EAEAA,EAAA,IAACO,EAAA,CACC,YAAAhB,EACA,aAAc,eACd,UAAWpB,EACX,aAAcQ,EACd,kBAAmBa,EACnB,eAAe,2BAAA,CACjB,EAEAQ,EAAAA,IAAC,MAAI,CAAA,UAAU,MAAO,CAAA,CAAA,CACxB,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}