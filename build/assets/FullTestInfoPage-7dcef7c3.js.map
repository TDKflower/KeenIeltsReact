{"version":3,"file":"FullTestInfoPage-7dcef7c3.js","sources":["../../src/pages/ieltstest/fulltest/FullTestInfoPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHref, useParams } from \"react-router-dom\";\nimport useAxios from \"../../../utils/useAxios\";\nimport { DJANGO_BASE_URL } from \"../../../utils/config\";\nimport {\n  Badge,\n  Button,\n  Card,\n  Col,\n  Container,\n  Row,\n  Stack,\n} from \"react-bootstrap\";\nimport PageHeadingBriefinfo from \"../../../components/layout/PageHeadingBriefInfo\";\nimport { FiArrowRight, FiCheckCircle, FiList } from \"react-icons/fi\";\nimport OverallBandsCard from \"../../../components/ieltstest/OverallBandsCard\";\n\nconst FullTestInfoPage = () => {\n  const { attempt_slug } = useParams();\n  const api = useAxios();\n  const [fullTest, setFullTest] = useState(null);\n\n  async function getFullTestInfo() {\n    const response = await api.post(\n      DJANGO_BASE_URL + \"/ieltstest/get_fulltest_info/\" + attempt_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setFullTest(response.data);\n    } else {\n      console.log(\"Error\");\n    }\n  }\n\n  useEffect(() => {\n    getFullTestInfo();\n  }, []);\n\n  useEffect(() => {\n    document.title = \"Full Test Dashboard  | KeenIELTS\";\n  }, []);\n\n  if (!fullTest) {\n    return null;\n  }\n\n  const modules = [\n    {\n      name: \"Listening Test\",\n      attempt: \"listening_attempt\",\n      slug: \"listening\",\n    },\n    {\n      name: \"Reading Test\",\n      attempt: \"reading_attempt\",\n      slug: \"reading\",\n    },\n    {\n      name: \"Writing Test\",\n      attempt: \"writing_attempt\",\n      slug: \"writing\",\n    },\n    {\n      name: \"Speaking Test\",\n      attempt: \"speaking_attempt\",\n      slug: \"speaking\",\n    },\n  ];\n\n  return (\n    <>\n      <PageHeadingBriefinfo\n        pagetitle={\"Full Test\"}\n        briefinfo={\"Practice full IELTS test with answers and explanations.\"}\n      />\n      <Container className=\"\">\n        <Row>\n          <Col lg={4} className=\"mb-3\">\n            <Row className=\"sticky-top pt-3\">\n              <Col>\n                <Card>\n                  <Card.Header className=\"p-0\">\n                    <Card.Img variant=\"top\" src={fullTest.test.book.cover} />\n                  </Card.Header>\n                  <Card.Body>\n                    <Card.Title\n                      className=\"text-dark\"\n                      style={{ fontSize: \"1.0rem\" }}\n                    >\n                      {fullTest.test.book.name}\n                    </Card.Title>\n                    <Card.Text>{fullTest.test.book.description}</Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\"py-2\">\n                    <Stack direction=\"horizontal\" gap={3}>\n                      <div className=\"px-2 py-0\">\n                        <span className=\"text-black text-capitalize fw-bold\">\n                          {fullTest.test.name}\n                        </span>\n                      </div>\n                    </Stack>\n                  </Card.Footer>\n\n                  {modules.map((module, index) =>\n                    fullTest[module.attempt].status === \"In Progress\" ||\n                    fullTest[module.attempt].status === \"Not Started\" ? (\n                      <a\n                        href={\n                          \"/ieltstest/attempt/\" +\n                          module.slug +\n                          \"/\" +\n                          fullTest[module.attempt].module_slug +\n                          \"/\" +\n                          fullTest[module.attempt].slug\n                        }\n                      >\n                        <Card.Footer key={index}>\n                          <Stack direction=\"horizontal\" gap={3}>\n                            <div className=\"px-2\">\n                              <span className=\"text-black text-capitalize \">\n                                {module.name}\n                              </span>\n                            </div>\n                            <div className=\"px-2 ms-auto\">\n                              <Button size=\"sm\" variant=\"outline-primary\">\n                                Start Test\n                                <FiArrowRight size={20} className=\" \" />\n                              </Button>\n                            </div>\n                          </Stack>\n                        </Card.Footer>\n                      </a>\n                    ) : (\n                      <a\n                        href={\n                          \"/ieltstest/attempt/\" +\n                          module.slug +\n                          \"/\" +\n                          fullTest[module.attempt].module_slug +\n                          \"/\" +\n                          fullTest[module.attempt].slug +\n                          \"/get_result\"\n                        }\n                      >\n                        <Card.Footer key={index}>\n                          <Stack direction=\"horizontal\" gap={3}>\n                            <div className=\"px-2\">\n                              <span className=\"text-black text-capitalize \">\n                                {module.name}\n                                <FiCheckCircle\n                                  size={20}\n                                  className=\"text-success\"\n                                />\n                              </span>\n                            </div>\n                            <div className=\"px-2 ms-auto\">\n                              <Button size=\"sm\" variant=\"outline-dark\">\n                                View Result{\" \"}\n                                <FiArrowRight size={20} className=\" \" />\n                              </Button>\n                            </div>\n                          </Stack>\n                        </Card.Footer>\n                      </a>\n                    )\n                  )}\n                </Card>\n              </Col>\n            </Row>\n          </Col>\n          <Col lg={8} className=\"mt-3\">\n            <Row>\n              {fullTest.status === \"Completed\" && (\n                <Col lg={12} className=\"mb-3\">\n                  <OverallBandsCard\n                    bands={fullTest.bands}\n                    description={fullTest.bands_description}\n                  />\n                </Col>\n              )}\n              {modules.map((module, index) => (\n                <Col lg={6} className=\"mb-3 d-flex\">\n                  {fullTest[module.attempt].status === \"In Progress\" ||\n                  fullTest[module.attempt].status === \"Not Started\" ? (\n                    <Card>\n                      <Card.Header>\n                        <Stack direction=\"horizontal\" gap={3}>\n                          <div className=\"px-2\">\n                            <h3 className={`mt-2 fw-bold `}>{module.name}</h3>\n                          </div>\n                          <div className=\"px-2 ms-auto\">\n                            <Badge bg=\"light\" className=\"text-black\">\n                              <span style={{ fontSize: 15 }}>\n                                {fullTest[module.attempt].status}\n                              </span>\n                            </Badge>\n                          </div>\n                        </Stack>\n                      </Card.Header>\n                      <Card.Body>\n                        <p>\n                          Get started on your {module.name} by clicking the\n                          button below. Once you're done, a detailed analysis of\n                          your performance will be ready and waiting for you\n                          right here!\n                        </p>\n                      </Card.Body>\n                      <Card.Footer>\n                        <a\n                          href={\n                            \"/ieltstest/attempt/\" +\n                            module.slug +\n                            \"/\" +\n                            fullTest[module.attempt].module_slug +\n                            \"/\" +\n                            fullTest[module.attempt].slug\n                          }\n                        >\n                          <Stack direction=\"horizontal\">\n                            <div className=\"p-2\">\n                              <span\n                                className={`fw-bold text-${module.slug} text-capitalize`}\n                              >\n                                Start {module.name}\n                              </span>\n                            </div>\n                            <div className=\"p-2 ms-auto\">\n                              <FiArrowRight size={20} className=\"text-black\" />\n                            </div>\n                          </Stack>\n                        </a>\n                      </Card.Footer>\n                    </Card>\n                  ) : (\n                    <Card className=\"d-flex\">\n                      <Card.Header>\n                        <Stack direction=\"horizontal\" gap={3}>\n                          <div className=\"px-2\">\n                            <h3 className={`mt-2 fw-bold `}>{module.name}</h3>\n                          </div>\n                          <div className=\"px-2 ms-auto\">\n                            <Badge bg=\"light\" className=\"text-black\">\n                              <span style={{ fontSize: 15 }}>\n                                {fullTest[module.attempt].status}\n                              </span>\n                            </Badge>\n                          </div>\n                        </Stack>\n                      </Card.Header>\n                      <Card.Body>\n                        <Badge bg={module.slug}>\n                          <h4 className=\"display-6 mt-2 mx-3 text-white\">\n                            {fullTest[module.attempt].bands} Bands\n                          </h4>\n                        </Badge>\n                        <p style={{ fontSize: \"1.1rem\" }} className=\"mt-4\">\n                          {fullTest[module.attempt].bands_description}\n                        </p>\n                      </Card.Body>\n                      <Card.Footer>\n                        <a\n                          href={\n                            \"/ieltstest/attempt/\" +\n                            module.slug +\n                            \"/\" +\n                            fullTest[module.attempt].module_slug +\n                            \"/\" +\n                            fullTest[module.attempt].slug +\n                            \"/get_result\"\n                          }\n                        >\n                          <Stack direction=\"horizontal\">\n                            <div className=\"p-2\">\n                              <span\n                                className={`fw-bold text-${module.slug} text-capitalize`}\n                              >\n                                View Results & Feedback\n                              </span>\n                            </div>\n                            <div className=\"p-2 ms-auto\">\n                              <FiArrowRight size={20} className=\"text-black\" />\n                            </div>\n                          </Stack>\n                        </a>\n                      </Card.Footer>\n                    </Card>\n                  )}\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default FullTestInfoPage;\n"],"names":["FullTestInfoPage","attempt_slug","useParams","api","useAxios","fullTest","setFullTest","useState","getFullTestInfo","response","DJANGO_BASE_URL","useEffect","modules","jsxs","Fragment","jsx","PageHeadingBriefinfo","Container","Row","Col","Card","Stack","module","index","Button","FiArrowRight","FiCheckCircle","OverallBandsCard","Badge"],"mappings":"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"}