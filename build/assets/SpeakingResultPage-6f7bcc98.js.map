{"version":3,"file":"SpeakingResultPage-6f7bcc98.js","sources":["../../src/pages/ieltstest/speaking/SpeakingResultPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport useAxios from \"../../../utils/useAxios\";\nimport { API_URLS } from \"../../../utils/config\";\nimport PageHeadingBriefinfo from \"../../../components/layout/PageHeadingBriefInfo\";\nimport {\n  Accordion,\n  Badge,\n  Button,\n  Card,\n  Col,\n  Container,\n  Row,\n  Table,\n} from \"react-bootstrap\";\nimport SectionCard from \"../../../components/ieltstest/SectionCard\";\nimport SkeletonLoader from \"../../../components/elements/skeleton/SkeletonLoader\";\nimport CustomAudioPlayer from \"../../../components/elements/audioplayer/CustomAudioPlayer\";\nimport LoadingContext from \"../../../context/layout/LoadingContext\";\nimport OverallBandsCard from \"../../../components/ieltstest/OverallBandsCard\";\nimport SuggestionListCard from \"../../../components/SuggestionListCard\";\nimport EstimatedBandScoreCard from \"../../../components/EstimatedBandScoreCard\";\nimport { FiPlayCircle } from \"react-icons/fi\";\nimport SpeakingLoader from \"../../../components/ieltstest/speaking/SpeakingLoader\";\nimport FullTestNextModule from \"../../../components/ieltstest/FullTestNextModule\";\nimport StartPracticeTestCard from \"../../../components/ieltstest/StartPracticeTestCard\";\nimport WhatsNextCard from \"../../../components/ieltstest/WhatsNextCard\";\nimport CommentsCard from \"../../../components/CommentsCard\";\nimport SpeakingResponsesCard from \"../../../components/ieltstest/speaking/SpeakingResponsesCard\";\nimport TestReactionCard from \"../../../components/ieltstest/TestReactionCard\";\nimport usePublicAxios from \"../../../utils/usePublicAxios\";\nimport UserTestInfoCard from \"../../../components/ieltstest/UserTestInfoCard\";\n\nconst module_type = \"speaking\";\n\nconst SpeakingResultPage = () => {\n  const { module_slug, attempt_slug } = useParams();\n  const [attempt, setAttempt] = useState(null);\n  const [module, setModule] = useState(null);\n  const [evaluation, setEvaluation] = useState(null);\n  const [currentAudioTime, setCurrentAudioTime] = useState(0.0);\n  const [deviceType, setDeviceType] = useState(\"desktop\");\n\n  const api = usePublicAxios();\n\n  async function getAttempt() {\n    const response = await api.post(\n      API_URLS.getSpeakingAttempt + attempt_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setAttempt(response.data);\n    } else {\n      console.error(\"Unable to fetch attempt at ListeningResult.jsx\");\n    }\n  }\n\n  async function getModule() {\n    const response = await api.post(\n      API_URLS.getSpeakingModule + module_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setModule(response.data);\n    }\n  }\n\n  async function getEvaluation() {\n    const response = await api.post(\n      \"/ieltstest/get_speaking_evaluation/\" + attempt_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setEvaluation(response.data);\n      getAttempt();\n    } else {\n      console.error(\"Unable to fetch attempt at ListeningResult.jsx\");\n    }\n  }\n\n  useEffect(() => {\n    getAttempt();\n    getModule();\n  }, []);\n\n  useEffect(() => {\n    getEvaluation();\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setDeviceType(\"mobile\");\n      } else {\n        setDeviceType(\"desktop\");\n      }\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    document.title = \"Speaking Test Result  | KeenIELTS\";\n  }, []);\n\n  if (!module || !attempt || !evaluation) {\n    return <SpeakingLoader />; // Replace with your preferred loading component\n  }\n\n  return (\n    <>\n      <div className=\"mt-4\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xl={8} lg={10} md={12} className=\"\">\n              <UserTestInfoCard attempt={attempt} module_type={module_type} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n      <Container className=\"mb-3\">\n        <Row className=\"justify-content-center\">\n          <Col xl={8} lg={10} md={12} className=\"mt-3\">\n            <OverallBandsCard\n              bands={attempt.bands}\n              description={attempt.bands_description}\n              color=\"speaking\"\n            />\n          </Col>\n\n          <Col xl={8} lg={10} md={12} className=\"mt-3\">\n            <EstimatedBandScoreCard\n              evaluation_keys={evaluation_keys}\n              evaluation={evaluation}\n            />\n          </Col>\n\n          <Col xl={8} lg={10} md={12} className=\"mt-3\">\n            <SuggestionListCard\n              title={\"Test Suggestions\"}\n              array={evaluation.word_choice_suggestions}\n            />\n          </Col>\n          <Col xl={8} lg={10} md={12} className=\"mt-3\">\n            <Card>\n              <Card.Header>\n                <h3 className=\"mt-2 fw-bold\">Conclusion & Expert Feedback</h3>\n              </Card.Header>\n              <Card.Body>\n                <p style={{ fontSize: \"1.1rem\" }}>\n                  {evaluation &&\n                    evaluation[\"overall_personalized_feedback_suggestions\"]}\n                </p>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xl={8} lg={10} md={12} className=\"mt-3\">\n            <SpeakingResponsesCard\n              attempt={attempt}\n              currentAudioTime={currentAudioTime}\n              module={module}\n            />\n          </Col>\n\n          <Col xl={8} lg={10} md={12} className=\"mt-3\">\n            <TestReactionCard />\n          </Col>\n\n          {attempt.full_test_next_attempt && (\n            <Col xl={8} lg={10} md={12} className=\"my-3\">\n              <FullTestNextModule attempt={attempt} />\n            </Col>\n          )}\n\n          <Col xl={8} lg={10} md={12} className=\"my-3\">\n            <WhatsNextCard />\n          </Col>\n\n          <Col xl={8} lg={10} md={12} className=\"mb-3\">\n            <StartPracticeTestCard />\n          </Col>\n\n          <Col xl={8} lg={10} md={12} className=\"mb-3\">\n            <CommentsCard unique_id={`${module_type}-${module_slug}`} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nconst evaluation_keys = [\n  {\n    name: \"Fluency and Coherence\",\n    short: \"FC\",\n    key: \"fluency_and_coherence_bands\",\n  },\n  {\n    name: \"Grammatical Range Accuracy\",\n    short: \"GRA\",\n    key: \"grammatical_range_and_accuracy_bands\",\n  },\n  {\n    name: \"Lexical Resource\",\n    short: \"LR\",\n    key: \"lexical_resource_bands\",\n  },\n  {\n    name: \"Pronunciation\",\n    short: \"PR\",\n    key: \"pronunciation_bands\",\n  },\n  // {\n  //   name: null,\n  //   short: \"Overall\",\n  //   key: \"overall_band_score\",\n  // },\n];\n\nexport default SpeakingResultPage;\n"],"names":["module_type","SpeakingResultPage","module_slug","attempt_slug","useParams","attempt","setAttempt","useState","module","setModule","evaluation","setEvaluation","currentAudioTime","setCurrentAudioTime","deviceType","setDeviceType","api","usePublicAxios","getAttempt","response","API_URLS","getModule","getEvaluation","useEffect","handleResize","SpeakingLoader","jsxs","Fragment","jsx","Container","Row","Col","UserTestInfoCard","OverallBandsCard","EstimatedBandScoreCard","evaluation_keys","SuggestionListCard","Card","SpeakingResponsesCard","TestReactionCard","FullTestNextModule","WhatsNextCard","StartPracticeTestCard","CommentsCard"],"mappings":"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"}