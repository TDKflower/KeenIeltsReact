{"version":3,"file":"AccountSettingForm-84239231.js","sources":["../../src/components/auth/AccountSettingForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useAxios from \"../../utils/useAxios\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport BaseForm from \"../layout/BaseForm\";\nimport { DJANGO_BASE_URL } from \"../../utils/config\";\n\nconst AccountSettingForm = () => {\n  const api = useAxios();\n  const [userData, setUserData] = useState(null);\n \n  const form_fields = [\n    {\n      type: \"text\",\n      label: \"First Name\",\n      id: \"first_name\",\n      invalid_feedback: \"e.g. Rahul\",\n      placeholder: \"Enter your First Name\",\n      value: userData?.first_name,\n    },\n    {\n      type: \"text\",\n      label: \"Last Name\",\n      id: \"last_name\",\n      invalid_feedback: \"e.g. Sharma\",\n      placeholder: \"Enter your Last Name\",\n      value: userData?.last_name,\n    },\n    {\n      type: \"select\",\n      label: \"Preparing for\",\n      id: \"testType\",\n      invalid_feedback: \"Select Academic or General\",\n      placeholder: \"What IELTS test you're preparing?\",\n      value: userData?.testType,\n      options: [\n        { value: \"academic\", label: \"Academic IELTS\" },\n        { value: \"general\", label: \"General IELTS\" },\n      ],\n    },\n    {\n      type: \"select\",\n      label: \"Your Target\",\n      id: \"bandsTarget\",\n      invalid_feedback: \"How many bands you're targeting?\",\n      placeholder: \"How many bands you're targeting?\",\n      value: userData?.bandsTarget,\n      options: [\n        { value: 6, label: \"6 Bands\" },\n        { value: 6.5, label: \"6.5 Bands\" },\n        { value: 7, label: \"7 Bands\" },\n        { value: 7.5, label: \"7.5 Bands\" },\n        { value: 8, label: \"8 Bands\" },\n        { value: 8.5, label: \"8.5 Bands\" },\n        { value: 9, label: \"9 Bands\" },\n      ],\n    },\n  ];\n\n  const AccountSettingSchema = Yup.object().shape({\n    first_name: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n    last_name: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n    testType: Yup.string().required(\"You must select a test type\"),\n  });\n\n  const updateAccountSetting = async (values, handleSuccess) => {\n    try {\n      const response = await api.post(\n        DJANGO_BASE_URL + \"/account/update_account_settings/\",\n        values\n      );\n      setUserData(response.data);\n      handleSuccess();\n    } catch (error) {\n      console.error(error.response || error.message);\n    }\n  };\n\n  function getUserDetails() {\n    api\n      .post(DJANGO_BASE_URL + \"/account/get_user_details/\")\n      .then((response) => {\n        if (response.status === 200) {\n          setUserData(response.data);\n        }\n      });\n  }\n\n  useEffect(() => {\n    getUserDetails();\n  }, []);\n\n  if (!userData) {\n    return null;\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <h3 className=\"mt-2 fw-bold\">Personal Information & Preferences</h3>\n      </Card.Header>\n      <Card.Body>\n        <BaseForm\n          form_fields={form_fields}\n          submit_label=\"Update\"\n          successMessage=\"Your account settings have been updated successfully\"\n          validation_schema={AccountSettingSchema}\n          on_submit={updateAccountSetting}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default AccountSettingForm;\n"],"names":["AccountSettingForm","api","useAxios","userData","setUserData","useState","form_fields","AccountSettingSchema","Yup.object","Yup.string","updateAccountSetting","values","handleSuccess","response","DJANGO_BASE_URL","error","getUserDetails","useEffect","Card","jsx","BaseForm"],"mappings":"uFAOA,MAAMA,EAAqB,IAAM,CAC/B,MAAMC,EAAMC,IACN,CAACC,EAAUC,CAAW,EAAIC,WAAS,IAAI,EAEvCC,EAAc,CAClB,CACE,KAAM,OACN,MAAO,aACP,GAAI,aACJ,iBAAkB,aAClB,YAAa,wBACb,MAAOH,GAAA,YAAAA,EAAU,UACnB,EACA,CACE,KAAM,OACN,MAAO,YACP,GAAI,YACJ,iBAAkB,cAClB,YAAa,uBACb,MAAOA,GAAA,YAAAA,EAAU,SACnB,EACA,CACE,KAAM,SACN,MAAO,gBACP,GAAI,WACJ,iBAAkB,6BAClB,YAAa,oCACb,MAAOA,GAAA,YAAAA,EAAU,SACjB,QAAS,CACP,CAAE,MAAO,WAAY,MAAO,gBAAiB,EAC7C,CAAE,MAAO,UAAW,MAAO,eAAgB,CAC7C,CACF,EACA,CACE,KAAM,SACN,MAAO,cACP,GAAI,cACJ,iBAAkB,mCAClB,YAAa,mCACb,MAAOA,GAAA,YAAAA,EAAU,YACjB,QAAS,CACP,CAAE,MAAO,EAAG,MAAO,SAAU,EAC7B,CAAE,MAAO,IAAK,MAAO,WAAY,EACjC,CAAE,MAAO,EAAG,MAAO,SAAU,EAC7B,CAAE,MAAO,IAAK,MAAO,WAAY,EACjC,CAAE,MAAO,EAAG,MAAO,SAAU,EAC7B,CAAE,MAAO,IAAK,MAAO,WAAY,EACjC,CAAE,MAAO,EAAG,MAAO,SAAU,CAC/B,CACF,CAAA,EAGII,EAAuBC,EAAW,EAAE,MAAM,CAC9C,WAAYC,EAAW,EACpB,IAAI,EAAG,YAAY,EACnB,IAAI,GAAI,WAAW,EACnB,SAAS,UAAU,EACtB,UAAWA,EAAW,EACnB,IAAI,EAAG,YAAY,EACnB,IAAI,GAAI,WAAW,EACnB,SAAS,UAAU,EACtB,SAAUA,EAAW,EAAE,SAAS,6BAA6B,CAAA,CAC9D,EAEKC,EAAuB,MAAOC,EAAQC,IAAkB,CACxD,GAAA,CACI,MAAAC,EAAW,MAAMZ,EAAI,KACzBa,EAAkB,oCAClBH,CAAA,EAEFP,EAAYS,EAAS,IAAI,EACXD,UACPG,EAAO,CACd,QAAQ,MAAMA,EAAM,UAAYA,EAAM,OAAO,CAC/C,CAAA,EAGF,SAASC,GAAiB,CACxBf,EACG,KAAKa,EAAkB,4BAA4B,EACnD,KAAMD,GAAa,CACdA,EAAS,SAAW,KACtBT,EAAYS,EAAS,IAAI,CAC3B,CACD,CACL,CAMA,OAJAI,EAAAA,UAAU,IAAM,CACCD,GACjB,EAAG,CAAE,CAAA,EAEAb,SAKFe,EACC,CAAA,SAAA,CAACC,EAAAA,IAAAD,EAAK,OAAL,CACC,SAAAC,EAAAA,IAAC,MAAG,UAAU,eAAe,8CAAkC,CACjE,CAAA,EACAA,EAAAA,IAACD,EAAK,KAAL,CACC,SAAAC,EAAA,IAACC,EAAA,CACC,YAAAd,EACA,aAAa,SACb,eAAe,uDACf,kBAAmBC,EACnB,UAAWG,CAAA,CAAA,EAEf,CACF,CAAA,CAAA,EAjBO,IAmBX"}