{"version":3,"file":"AccountPage-4ad468cf.js","sources":["../../src/components/auth/ChangePasswordForm.jsx","../../src/pages/base/AccountPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport useAxios from \"../../utils/useAxios\";\nimport * as Yup from \"yup\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport BaseForm from \"../layout/BaseForm\";\nimport { DJANGO_BASE_URL } from \"../../utils/config\";\n\nconst ChangePasswordForm = () => {\n  const api = useAxios();\n  const [error, setError] = useState(null);\n\n  const form_fields = [\n    {\n      type: \"password\",\n      label: \"Old Password\",\n      id: \"old_password\",\n      invalid_feedback: \"Please enter your old password\",\n      placeholder: \"*************\",\n    },\n    {\n      type: \"password\",\n      label: \"New Password\",\n      id: \"new_password1\",\n      invalid_feedback: \"Password should be strong\",\n      placeholder: \"*************\",\n    },\n    {\n      type: \"password\",\n      label: \"Confirm Password\",\n      id: \"new_password2\",\n      invalid_feedback: \"Confirm password should  be same as Password\",\n      placeholder: \"*************\",\n    },\n  ];\n\n  const ChangePasswordSchema = Yup.object().shape({\n    old_password: Yup.string().required(\"Password is required\"),\n    new_password1: Yup.string()\n      .required(\"Password is required\")\n      .min(\n        8,\n        \"password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special\"\n      )\n      .minLowercase(1, \"password must contain at least 1 lower case letter\")\n      .minUppercase(1, \"password must contain at least 1 upper case letter\")\n      .minNumbers(1, \"password must contain at least 1 number\")\n      .minSymbols(1, \"password must contain at least 1 special character\"),\n    new_password2: Yup.string().oneOf(\n      [Yup.ref(\"new_password1\"), null],\n      \"Passwords must match\"\n    ),\n  });\n\n  const changePassword = async (values) => {\n    try {\n      const response = await api.post(\n        DJANGO_BASE_URL + \"/account/change_account_password/\",\n        values\n      );\n      // If the request is successful, handle the response accordingly\n      console.log(response);\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data);\n      } else {\n        setError(err.message);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header>\n        <h3 className=\"mt-2 fw-bold\">Change Password</h3>\n      </Card.Header>\n      <Card.Body>\n        <BaseForm\n          form_fields={form_fields}\n          submit_label=\"Update\"\n          validation_schema={ChangePasswordSchema}\n          on_submit={changePassword}\n          serverErrors={error}\n          successMessage=\"Password updated successfully.\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ChangePasswordForm;\n","import React, { useEffect, useState } from \"react\";\nimport PageHeadingBriefinfo from \"../../components/layout/PageHeadingBriefInfo\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport BaseForm from \"../../components/layout/BaseForm\";\nimport useAxios from \"../../utils/useAxios\";\nimport { DJANGO_BASE_URL } from \"../../utils/config\";\nimport AccountSettingForm from \"../../components/auth/AccountSettingForm\";\nimport ChangePasswordForm from \"../../components/auth/ChangePasswordForm\";\nimport ProfileCover from \"../../components/layout/ProfileCover\";\n\nconst AccountPage = () => {\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-center \">\n          <Col xl={12} lg={12} md={12} className=\"mt-3 \">\n            <ProfileCover page=\"account\" />\n          </Col>\n          <Col xl={6} lg={6} md={12} className=\"mb-3\">\n            <AccountSettingForm />\n          </Col>\n          <Col xl={6} lg={6} md={12} className=\"mb-3\">\n            <ChangePasswordForm />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default AccountPage;\n"],"names":["ChangePasswordForm","api","useAxios","error","setError","useState","form_fields","ChangePasswordSchema","Yup.object","Yup.string","Yup.ref","changePassword","values","response","DJANGO_BASE_URL","err","Card","jsx","BaseForm","AccountPage","Container","jsxs","Row","Col","ProfileCover","AccountSettingForm"],"mappings":"uPAOA,MAAMA,EAAqB,IAAM,CAC/B,MAAMC,EAAMC,IACN,CAACC,EAAOC,CAAQ,EAAIC,WAAS,IAAI,EAEjCC,EAAc,CAClB,CACE,KAAM,WACN,MAAO,eACP,GAAI,eACJ,iBAAkB,iCAClB,YAAa,eACf,EACA,CACE,KAAM,WACN,MAAO,eACP,GAAI,gBACJ,iBAAkB,4BAClB,YAAa,eACf,EACA,CACE,KAAM,WACN,MAAO,mBACP,GAAI,gBACJ,iBAAkB,+CAClB,YAAa,eACf,CAAA,EAGIC,EAAuBC,EAAW,EAAE,MAAM,CAC9C,aAAcC,EAAW,EAAE,SAAS,sBAAsB,EAC1D,cAAeA,EACZ,EAAA,SAAS,sBAAsB,EAC/B,IACC,EACA,gHAED,EAAA,aAAa,EAAG,oDAAoD,EACpE,aAAa,EAAG,oDAAoD,EACpE,WAAW,EAAG,yCAAyC,EACvD,WAAW,EAAG,oDAAoD,EACrE,cAAeA,EAAI,EAAS,MAC1B,CAACC,EAAQ,eAAe,EAAG,IAAI,EAC/B,sBACF,CAAA,CACD,EAEKC,EAAiB,MAAOC,GAAW,CACnC,GAAA,CACI,MAAAC,EAAW,MAAMZ,EAAI,KACzBa,EAAkB,oCAClBF,CAAA,EAGF,QAAQ,IAAIC,CAAQ,QACbE,EAAK,CACRA,EAAI,SACGX,EAAAW,EAAI,SAAS,IAAI,EAE1BX,EAASW,EAAI,OAAO,CAExB,CAAA,EAGF,cACGC,EACC,CAAA,SAAA,CAACC,EAAAA,IAAAD,EAAK,OAAL,CACC,SAAAC,EAAAA,IAAC,MAAG,UAAU,eAAe,2BAAe,CAC9C,CAAA,EACAA,EAAAA,IAACD,EAAK,KAAL,CACC,SAAAC,EAAA,IAACC,EAAA,CACC,YAAAZ,EACA,aAAa,SACb,kBAAmBC,EACnB,UAAWI,EACX,aAAcR,EACd,eAAe,gCAAA,CAAA,EAEnB,CACF,CAAA,CAAA,CAEJ,EC5EMgB,EAAc,sBAGd,SAACF,EAAA,IAAAG,EAAA,CACC,SAACC,EAAA,KAAAC,EAAA,CAAI,UAAU,0BACb,SAAA,CAAAL,EAAA,IAACM,EAAI,CAAA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,UAAU,QACrC,SAAAN,MAACO,EAAa,CAAA,KAAK,SAAU,CAAA,EAC/B,EACCP,EAAA,IAAAM,EAAA,CAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,UAAU,OACnC,SAACN,EAAA,IAAAQ,EAAA,CAAmB,CAAA,EACtB,EACCR,EAAA,IAAAM,EAAA,CAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,UAAU,OACnC,SAACN,EAAA,IAAAjB,EAAA,CAAmB,CAAA,EACtB,CAAA,EACF,EACF,CACF,CAAA"}