{"version":3,"file":"SpeakingResponsesCard-f3044886.js","sources":["../../src/components/ieltstest/speaking/SpeakingResponsesCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport CustomAudioPlayer from \"../../elements/audioplayer/CustomAudioPlayer\";\nimport { FiPlayCircle } from \"react-icons/fi\";\n\nconst SpeakingResponsesCard = ({ attempt, module }) => {\n  const [currentAudioQuestionId, setCurrentAudioQuestionId] = useState(0);\n  const [currentAudioQuestion, setCurrentAudioQuestion] = useState(null);\n    const [currentAudioTime, setCurrentAudioTime] = useState(0.0);\n  const handleTimeUpdate = (currentTime) => {\n    Object.entries(attempt.merged_timestamps).forEach(([key, value]) => {\n      const timestamp = parseFloat(value);\n      if (currentTime >= timestamp) {\n        setCurrentAudioQuestionId(key);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (module) {\n      module.sections.forEach((section) => {\n        section.questions.forEach((question) => {\n          if (question.id == currentAudioQuestionId) {\n            setCurrentAudioQuestion(question.question);\n          }\n        });\n      });\n    } else {\n      console.log(\"Module is null\");\n    }\n  }, [currentAudioQuestionId]);\n\n  return (\n    <Card>\n      <Card.Header>\n        <h3 className=\"mt-2 fw-bold\">Your Responses</h3>\n      </Card.Header>\n      <div className=\"mt-3\">\n        {currentAudioQuestion && (\n          <div className=\"border-bottom px-4 pt-2 pb-3 text-center mb-3\">\n            <h4>{currentAudioQuestion}</h4>\n          </div>\n        )}\n        <div className=\"\">\n          <CustomAudioPlayer\n            src={attempt.merged_audio}\n            start_time={currentAudioTime}\n            handleTimeUpdate={handleTimeUpdate}\n          />\n        </div>\n      </div>\n      <hr />\n      <Card.Body>\n        <Accordion>\n          {module.sections.map((section, index) => (\n            <Accordion.Item eventKey={index} key={index}>\n              <Accordion.Header>\n                <h4 className=\"mt-2 fw-bold\">{section.section} Questions</h4>\n              </Accordion.Header>\n              <Accordion.Body className=\"\">\n                <div className=\"\">\n                  <Table bordered striped responsive>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Question Asked</th>\n                        <th scope=\"col\">Play</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {section.questions.map((question, index) => (\n                        <tr key={index}>\n                          <th scope=\"row\">{index + 1}</th>\n                          <td>{question.question}</td>\n                          <td>\n                            <FiPlayCircle\n                              size={20}\n                              onClick={() => {\n                                setCurrentAudioTime(\n                                  attempt.merged_timestamps[question.id]\n                                );\n                              }}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </div>\n              </Accordion.Body>\n            </Accordion.Item>\n          ))}\n        </Accordion>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SpeakingResponsesCard;\n"],"names":["SpeakingResponsesCard","attempt","module","currentAudioQuestionId","setCurrentAudioQuestionId","useState","currentAudioQuestion","setCurrentAudioQuestion","currentAudioTime","setCurrentAudioTime","handleTimeUpdate","currentTime","key","value","timestamp","useEffect","section","question","Card","jsx","jsxs","CustomAudioPlayer","Accordion","index","Table","FiPlayCircle"],"mappings":"qMAKA,MAAMA,EAAwB,CAAC,CAAE,QAAAC,EAAS,OAAAC,KAAa,CACrD,KAAM,CAACC,EAAwBC,CAAyB,EAAIC,WAAS,CAAC,EAChE,CAACC,EAAsBC,CAAuB,EAAIF,WAAS,IAAI,EAC7D,CAACG,EAAkBC,CAAmB,EAAIJ,WAAS,CAAG,EACxDK,EAAoBC,GAAgB,CACjC,OAAA,QAAQV,EAAQ,iBAAiB,EAAE,QAAQ,CAAC,CAACW,EAAKC,CAAK,IAAM,CAC5D,MAAAC,EAAY,WAAWD,CAAK,EAC9BF,GAAeG,GACjBV,EAA0BQ,CAAG,CAC/B,CACD,CAAA,EAGHG,OAAAA,EAAAA,UAAU,IAAM,CACVb,EACKA,EAAA,SAAS,QAASc,GAAY,CAC3BA,EAAA,UAAU,QAASC,GAAa,CAClCA,EAAS,IAAMd,GACjBI,EAAwBU,EAAS,QAAQ,CAC3C,CACD,CAAA,CACF,EAED,QAAQ,IAAI,gBAAgB,CAC9B,EACC,CAACd,CAAsB,CAAC,SAGxBe,EACC,CAAA,SAAA,CAACC,EAAAA,IAAAD,EAAK,OAAL,CACC,SAAAC,EAAAA,IAAC,MAAG,UAAU,eAAe,0BAAc,CAC7C,CAAA,EACAC,EAAAA,KAAC,MAAI,CAAA,UAAU,OACZ,SAAA,CAAAd,SACE,MAAI,CAAA,UAAU,gDACb,SAACa,EAAA,IAAA,KAAA,CAAI,WAAqB,CAC5B,CAAA,EAEFA,EAAAA,IAAC,MAAI,CAAA,UAAU,GACb,SAAAA,EAAA,IAACE,EAAA,CACC,IAAKpB,EAAQ,aACb,WAAYO,EACZ,iBAAAE,CAAA,CAAA,EAEJ,CAAA,EACF,QACC,KAAG,EAAA,QACHQ,EAAK,KAAL,CACC,SAAAC,EAAAA,IAACG,GACE,SAAOpB,EAAA,SAAS,IAAI,CAACc,EAASO,IAC7BH,OAACE,EAAU,KAAV,CAAe,SAAUC,EACxB,SAAA,CAAAJ,MAACG,EAAU,OAAV,CACC,SAACF,OAAA,KAAA,CAAG,UAAU,eAAgB,SAAA,CAAQJ,EAAA,QAAQ,YAAA,CAAA,CAAU,CAC1D,CAAA,QACCM,EAAU,KAAV,CAAe,UAAU,GACxB,SAACH,EAAA,IAAA,MAAA,CAAI,UAAU,GACb,gBAACK,EAAM,CAAA,SAAQ,GAAC,QAAO,GAAC,WAAU,GAChC,SAAA,CAACL,EAAA,IAAA,QAAA,CACC,gBAAC,KACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,MAAM,MAAM,SAAC,IAAA,EAChBA,EAAA,IAAA,KAAA,CAAG,MAAM,MAAM,SAAc,iBAAA,EAC7BA,EAAA,IAAA,KAAA,CAAG,MAAM,MAAM,SAAI,OAAA,CAAA,CAAA,CACtB,CACF,CAAA,EACAA,EAAAA,IAAC,SACE,SAAQH,EAAA,UAAU,IAAI,CAACC,EAAUM,IAChCH,EAAAA,KAAC,KACC,CAAA,SAAA,CAAAD,EAAA,IAAC,KAAG,CAAA,MAAM,MAAO,SAAAI,EAAQ,EAAE,EAC3BJ,EAAAA,IAAC,KAAI,CAAA,SAAAF,EAAS,QAAS,CAAA,QACtB,KACC,CAAA,SAAAE,EAAA,IAACM,EAAA,CACC,KAAM,GACN,QAAS,IAAM,CACbhB,EACER,EAAQ,kBAAkBgB,EAAS,EAAE,CAAA,CAEzC,CAAA,CAAA,EAEJ,CAAA,GAZOM,CAaT,CACD,EACH,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAlCoC,CAAA,EAAAA,CAmCtC,CACD,CACH,CAAA,EACF,CACF,CAAA,CAAA,CAEJ"}