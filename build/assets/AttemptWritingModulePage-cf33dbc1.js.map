{"version":3,"file":"AttemptWritingModulePage-cf33dbc1.js","sources":["../../src/components/ieltstest/writing/WritingSection.jsx","../../src/components/ieltstest/writing/WritingTask.jsx","../../src/components/ieltstest/writing/WritingFooter.jsx","../../src/pages/ieltstest/writing/AttemptWritingModulePage.jsx"],"sourcesContent":["import React from \"react\";\nimport { Badge, Form } from \"react-bootstrap\";\nimport parse from \"html-react-parser\";\n\nconst WritingSection = ({\n  currentSection,\n  deviceType,\n  formRef,\n  handleChange,\n  currentFormData,\n  userAnswerBySection, // Pass this as a prop\n}) => {\n  // Function to count the words\n  const countWords = (text) => {\n    if (!text) return 0;\n    return text.trim().split(/\\s+/).length;\n  };\n\n  // Get the current section's user input\n  const currentAnswer = userAnswerBySection[currentSection.id] || \"\";\n\n  return (\n    <>\n      <form className=\"writing-questions mb-2\" ref={formRef}>\n        {parse(currentSection.questions)}\n        <Form.Control\n          as={\"textarea\"}\n          rows={deviceType === \"mobile\" ? 10 : 30}\n          placeholder=\"Write your answer here\"\n          name={`task-${currentSection.id}`}\n          value={currentAnswer}\n          onChange={handleChange}\n        />\n      </form>\n      <div style={{ textAlign: \"right\" }}>\n        <Badge className=\"bg-dark mb-3\">\n          Word Count: {countWords(currentAnswer)}\n        </Badge>\n      </div>\n    </>\n  );\n};\n\nexport default WritingSection;\n","import React from \"react\";\nimport parse from \"html-react-parser\";\n\nconst WritingTask = ({ currentSection }) => {\n  return <div> {parse(currentSection.task)}</div>;\n};\n\nexport default WritingTask;\n","import React from \"react\";\nimport { Col, Container, Row, Stack, Button } from \"react-bootstrap\";\nimport CountdownTimer from \"../../elements/CountdownTimer\";\nimport { FiArrowRight, FiCheckCircle, FiArrowLeft } from \"react-icons/fi\";\n\nconst WritingFooter = ({\n  deviceType,\n  handleConfirmEndTest,\n  isFirstSection,\n  isLastSection,\n  handleNextSectionButton,\n  handlePreviousSectionButton,\n  setShowSubmitModal,\n}) => {\n  return (\n    <div\n      className=\"fixed-footer border-top\"\n      style={{\n        height: \"50px\", // adjust as needed\n        width: \"100vw\",\n        position: \"fixed\",\n        bottom: 0,\n        backgroundColor: \"white\",\n        transition: \"height 0.3s\",\n        zIndex: \"999\",\n      }}\n    >\n      <Container>\n        <Row className=\"mt-1 text-black\">\n          <Col className=\"col-4 mt-1\">\n            <CountdownTimer\n              initialMinutes={60}\n              initialSeconds={0}\n              handleTimesUp={handleConfirmEndTest}\n            />\n          </Col>\n          <Col className=\"col-8 mt-1\" style={{ textAlign: \"right\" }}>\n            <Button\n              variant=\"dark\"\n              className=\"btn-sm mx-2\"\n              onClick={handlePreviousSectionButton}\n              disabled={isFirstSection} // Disable if on the first section\n            >\n              <FiArrowLeft size={20} />{\" \"}\n              {deviceType !== \"mobile\" && \"Previous Task\"}\n            </Button>\n            {isLastSection ? (\n              <Button\n                variant=\"primary\"\n                className=\"btn-sm\"\n                onClick={() => {\n                  setShowSubmitModal(true);\n                }}\n              >\n                Submit Test <FiCheckCircle size={20} />\n              </Button>\n            ) : (\n              <Button\n                variant=\"dark\"\n                className=\"btn-sm\"\n                onClick={handleNextSectionButton}\n              >\n                Next Task <FiArrowRight size={20} />\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default WritingFooter;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport useAxios from \"../../../utils/useAxios\";\nimport { API_URLS } from \"../../../utils/config\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { MiniNavBar } from \"../../../components/ieltstest/MiniNavBar\";\nimport { Modal } from \"react-bootstrap\";\nimport BookInfo from \"../../../components/ieltstest/listening/BookInfo\";\nimport \"../../../components/ieltstest/writing/WritingModule.css\";\n\nimport {\n  Stack,\n  Navbar,\n  Card,\n  Container,\n  Row,\n  Col,\n  Accordion,\n  Table,\n  Badge,\n  Button,\n} from \"react-bootstrap\";\nimport { FiArrowLeft, FiArrowRight, FiCheckCircle } from \"react-icons/fi\";\nimport WritingSection from \"../../../components/ieltstest/writing/WritingSection\";\nimport WritingTask from \"../../../components/ieltstest/writing/WritingTask\";\nimport WritingFooter from \"../../../components/ieltstest/writing/WritingFooter\";\nimport CustomSplitPane from \"../../../components/layout/CustomSplitPane\";\n\nconst AttemptWritingModulePage = () => {\n  // Variables:\n  const api = useAxios();\n  const { module_slug, attempt_slug } = useParams();\n  const [module, setModule] = useState(null);\n  const [currentSection, setCurrentSection] = useState(null);\n  const [showTestInfoModal, setShowTestInfoModal] = useState(false);\n  const handleCloseTestInfoModal = () => setShowTestInfoModal(false);\n  const [deviceType, setDeviceType] = useState(\"desktop\");\n  const [userAnswerBySection, setUserAnswerBySection] = useState({});\n  const formRef = useRef(null);\n  const [currentFormData, setCurrentFormData] = useState({});\n  const isFirstSection = currentSection\n    ? currentSection.id === module.sections[0].id\n    : false;\n  const isLastSection = currentSection\n    ? currentSection.id === module.sections[module.sections.length - 1].id\n    : false;\n  const [showSubmitModal, setShowSubmitModal] = useState(false);\n  const handleShowSubmitModal = () => setShowSubmitModal(true);\n  const handleClosSubmiteModal = () => setShowSubmitModal(false);\n  const navigate = useNavigate();\n\n  // Functions\n  async function getModule() {\n    const response = await api.post(\n      API_URLS.getWritingModule + module_slug + \"/\"\n    );\n    if (response.status === 200) {\n      setModule(response.data);\n      setCurrentSection(response.data.sections[0]);\n    }\n  }\n\n  function updateCurrentSection(id) {\n    const newSection = module.sections.find((section) => section.id === id);\n    setCurrentSection(newSection);\n  }\n\n  function sendAttemptUpdate(attempt_type = \"In Progress\") {\n    const data = {\n      answers: userAnswerBySection,\n      attempt_type: attempt_type,\n    };\n\n    return api.post(\n      \"/ieltstest/update_attempt/writing/\" + attempt_slug + \"/\",\n      data\n    );\n  }\n  \n  function handleConfirmEndTest() {\n    getFormDataLocal();\n    sendAttemptUpdate(\"Completed\")\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Attempt Updated\");\n          navigate(\n            `/ieltstest/attempt/writing/${module_slug}/${attempt_slug}/get_result`\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error updating attempt: \", error);\n      });\n    handleClosSubmiteModal();\n  }\n\n  function handlePreviousSectionButton() {\n    let current_section_id = currentSection.id;\n    let new_section_id = current_section_id - 1;\n    const newSection = module.sections.find(\n      (section) => section.id === new_section_id\n    );\n    if (newSection) {\n      setCurrentSection(newSection);\n    } else {\n      const lastElement = module.sections[module.sections.length - 1];\n      setCurrentSection(lastElement);\n    }\n  }\n\n  function handleNextSectionButton() {\n    let current_section_id = currentSection.id;\n    let new_section_id = current_section_id + 1;\n    const newSection = module.sections.find(\n      (section) => section.id === new_section_id\n    );\n    if (newSection) {\n      setCurrentSection(newSection);\n    } else {\n      const lastElement = module.sections[0];\n      setCurrentSection(lastElement);\n    }\n  }\n\n  // CSS\n\n  const paneStyle = {\n    overflow: \"auto\",\n  };\n\n  const containerStyle = {\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    height: \"calc(100vh - 50px)\", // Assuming 50px for NavBar and 50px for Footer\n    overflow: \"auto\", // Prevent scrollbars on the main layout\n  };\n\n  //useEffects\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setDeviceType(\"mobile\");\n      } else {\n        setDeviceType(\"desktop\");\n      }\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const handleChange = (event) => {\n    const formData = getFormDataLocal();\n  };\n\n  function getFormDataLocal() {\n    if (formRef.current) {\n      const formData = new FormData(formRef.current);\n      let data = {};\n      for (let [key, value] of formData.entries()) {\n        data[key] = value; // Construct the data object\n      }\n      // Use currentSection.id to store the data for the current section\n      setUserAnswerBySection({\n        ...userAnswerBySection,\n        [currentSection.id]: data[`task-${currentSection.id}`],\n      });\n      setCurrentFormData(data);\n    }\n  }\n\n  useEffect(() => {\n    if (currentSection) {\n      window.scrollTo(0, 0);\n    }\n  }, [currentSection]);\n\n  useEffect(() => {\n    getFormDataLocal();\n    if (currentSection) {\n    }\n  }, [currentSection]);\n\n  useEffect(() => {\n    getModule();\n  }, []);\n\n  useEffect(() => {\n    document.title = \"Writing Test | KeenIELTS\";\n  }, []);\n\n  if (!module) {\n    return null;\n  }\n\n  return (\n    <>\n      <MiniNavBar\n        module={module}\n        currentSection={currentSection}\n        updateCurrentSection={updateCurrentSection}\n        setShowTestInfoModal={setShowTestInfoModal}\n      />\n      <CustomSplitPane\n        deviceType={deviceType}\n        currentSection={currentSection}\n        left={\n          <WritingTask\n            currentSection={currentSection}\n            key={currentSection.id}\n          />\n        }\n        right={\n          <WritingSection\n            currentSection={currentSection}\n            key={currentSection.id}\n            deviceType={deviceType}\n            formRef={formRef}\n            handleChange={handleChange}\n            currentFormData={currentFormData}\n            userAnswerBySection={userAnswerBySection} // Pass this prop\n          />\n        }\n      />\n\n      <WritingFooter\n        deviceType={deviceType}\n        handleConfirmEndTest={handleConfirmEndTest}\n        isFirstSection={isFirstSection}\n        isLastSection={isLastSection}\n        handleNextSectionButton={handleNextSectionButton}\n        handlePreviousSectionButton={handlePreviousSectionButton}\n        setShowSubmitModal={setShowSubmitModal}\n      />\n\n      <Modal show={showSubmitModal} onHide={handleClosSubmiteModal} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>End Test</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to end the test?</Modal.Body>\n        <Modal.Footer className=\"p-2\">\n          <Button variant=\"outline-primary\" onClick={handleClosSubmiteModal}>\n            No\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirmEndTest}>\n            Yes, end test\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        show={showTestInfoModal}\n        onHide={handleCloseTestInfoModal}\n        centered\n        className=\"p-0\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Test Info</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"p-0\">\n          <BookInfo module={module} attempt_slug={attempt_slug} />\n        </Modal.Body>\n        <div className=\"modal-footer py-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={handleCloseTestInfoModal}\n          >\n            Close\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default AttemptWritingModulePage;\n"],"names":["WritingSection","currentSection","deviceType","formRef","handleChange","currentFormData","userAnswerBySection","countWords","text","currentAnswer","jsxs","Fragment","parse","jsx","Form","Badge","WritingTask","WritingFooter","handleConfirmEndTest","isFirstSection","isLastSection","handleNextSectionButton","handlePreviousSectionButton","setShowSubmitModal","Container","Row","Col","CountdownTimer","Button","FiArrowLeft","FiCheckCircle","FiArrowRight","AttemptWritingModulePage","api","useAxios","module_slug","attempt_slug","useParams","module","setModule","useState","setCurrentSection","showTestInfoModal","setShowTestInfoModal","handleCloseTestInfoModal","setDeviceType","setUserAnswerBySection","useRef","setCurrentFormData","showSubmitModal","handleClosSubmiteModal","navigate","useNavigate","getModule","response","API_URLS","updateCurrentSection","id","newSection","section","sendAttemptUpdate","attempt_type","data","getFormDataLocal","error","new_section_id","lastElement","useEffect","handleResize","event","formData","key","value","MiniNavBar","CustomSplitPane","Modal","BookInfo"],"mappings":"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"}